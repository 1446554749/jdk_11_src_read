/*******************************************************************************
 * Copyright (c) 1991, 2021 IBM Corp. and others
 *
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/
 * or the Apache License, Version 2.0 which accompanies this distribution
 * and is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * This Source Code may also be made available under the following
 * Secondary Licenses when the conditions for such availability set
 * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
 * General Public License, version 2 with the GNU Classpath
 * Exception [1] and GNU General Public License, version 2 with the
 * OpenJDK Assembly Exception [2].
 *
 * [1] https://www.gnu.org/software/classpath/license.html
 * [2] http://openjdk.java.net/legal/assembly-exception.html
 *
 *  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
 *******************************************************************************/
package com.ibm.j9ddr.vm29.pointer.generated;
import java.lang.reflect.Field;
import java.util.HashSet;

/**
 * Structure: J9BuildFlags
 *
 * A generated implementation of a VM structure
 *
 * This class contains generated code and MAY contain hand written user code.
 *
 * Hand written user code must be contained at the top of
 * the class file, specifically above
 * the comment line containing WARNING!!! GENERATED CODE
 *
 * ALL code below the GENERATED warning will be replaced with new generated code
 * each time the PointerGenerator utility is run.
 *
 * The generated code will provide getters for all elements in the J9BuildFlags
 * structure.  Where possible, meaningful return types are inferred.
 *
 * The user may add methods to provide meaningful return types where only pointers
 * could be automatically inferred.
 */
public final class J9BuildFlags {

	// Do not instantiate constant classes
	private J9BuildFlags() {
	}

	// Build Flags
	public static final boolean EsExtraVersionString_DEFINED;
	public static final boolean EsVersionMajor;
	public static final boolean EsVersionMajor_DEFINED;
	public static final boolean EsVersionMinor;
	public static final boolean EsVersionMinor_DEFINED;
	public static final boolean EsVersionString_DEFINED;
	public static final boolean J9VM_ARCH_AARCH64;
	public static final boolean J9VM_ARCH_AARCH64_DEFINED;
	public static final boolean J9VM_ARCH_ARM;
	public static final boolean J9VM_ARCH_ARM_DEFINED;
	public static final boolean J9VM_ARCH_POWER;
	public static final boolean J9VM_ARCH_POWER_DEFINED;
	public static final boolean J9VM_ARCH_RISCV;
	public static final boolean J9VM_ARCH_RISCV_DEFINED;
	public static final boolean J9VM_ARCH_S390_DEFINED;
	public static final boolean J9VM_ARCH_X86;
	public static final boolean J9VM_ARCH_X86_DEFINED;
	public static final boolean J9VM_BUILD_AUTOBUILD;
	public static final boolean J9VM_BUILD_AUTOBUILD_DEFINED;
	public static final boolean J9VM_BUILD_CMAKE;
	public static final boolean J9VM_BUILD_CMAKE_DEFINED;
	public static final boolean J9VM_BUILD_DROP_TO_HURSLEY;
	public static final boolean J9VM_BUILD_DROP_TO_HURSLEY_DEFINED;
	public static final boolean J9VM_BUILD_DROP_TO_PHOENIX;
	public static final boolean J9VM_BUILD_DROP_TO_PHOENIX_DEFINED;
	public static final boolean J9VM_BUILD_DROP_TO_TORONTO;
	public static final boolean J9VM_BUILD_DROP_TO_TORONTO_DEFINED;
	public static final boolean J9VM_BUILD_FIPS;
	public static final boolean J9VM_BUILD_FIPS_DEFINED;
	public static final boolean J9VM_BUILD_GC_CONTINUOUS;
	public static final boolean J9VM_BUILD_GC_CONTINUOUS_DEFINED;
	public static final boolean J9VM_BUILD_J2ME;
	public static final boolean J9VM_BUILD_J2ME_DEFINED;
	public static final boolean J9VM_BUILD_J2SE;
	public static final boolean J9VM_BUILD_J2SE_DEFINED;
	public static final boolean J9VM_BUILD_J9VM_DOC;
	public static final boolean J9VM_BUILD_J9VM_DOC_DEFINED;
	public static final boolean J9VM_BUILD_JAVA5;
	public static final boolean J9VM_BUILD_JAVA5_DEFINED;
	public static final boolean J9VM_BUILD_JAVA6;
	public static final boolean J9VM_BUILD_JAVA60_26;
	public static final boolean J9VM_BUILD_JAVA60_26_DEFINED;
	public static final boolean J9VM_BUILD_JAVA6PROXY;
	public static final boolean J9VM_BUILD_JAVA6PROXY_DEFINED;
	public static final boolean J9VM_BUILD_JAVA6_DEFINED;
	public static final boolean J9VM_BUILD_JAVA7;
	public static final boolean J9VM_BUILD_JAVA70_27;
	public static final boolean J9VM_BUILD_JAVA70_27_DEFINED;
	public static final boolean J9VM_BUILD_JAVA7BASIC;
	public static final boolean J9VM_BUILD_JAVA7BASIC_DEFINED;
	public static final boolean J9VM_BUILD_JAVA7RAW;
	public static final boolean J9VM_BUILD_JAVA7RAW_DEFINED;
	public static final boolean J9VM_BUILD_JAVA7_DEFINED;
	public static final boolean J9VM_BUILD_JAVA8;
	public static final boolean J9VM_BUILD_JAVA8RAW;
	public static final boolean J9VM_BUILD_JAVA8RAW_DEFINED;
	public static final boolean J9VM_BUILD_JAVA8_DEFINED;
	public static final boolean J9VM_BUILD_JAVA9;
	public static final boolean J9VM_BUILD_JAVA9_DEFINED;
	public static final boolean J9VM_BUILD_NEW_COMPILER;
	public static final boolean J9VM_BUILD_NEW_COMPILER_DEFINED;
	public static final boolean J9VM_BUILD_OPENJ9;
	public static final boolean J9VM_BUILD_OPENJ9_DEFINED;
	public static final boolean J9VM_BUILD_OUNCEMAKE;
	public static final boolean J9VM_BUILD_OUNCEMAKE_DEFINED;
	public static final boolean J9VM_BUILD_PRODUCT;
	public static final boolean J9VM_BUILD_PRODUCT_DEFINED;
	public static final boolean J9VM_BUILD_REALTIME;
	public static final boolean J9VM_BUILD_REALTIME_DEFINED;
	public static final boolean J9VM_BUILD_STAGE_OTTAWA_VMLAB;
	public static final boolean J9VM_BUILD_STAGE_OTTAWA_VMLAB_DEFINED;
	public static final boolean J9VM_BUILD_STAGE_TORONTO_LAB;
	public static final boolean J9VM_BUILD_STAGE_TORONTO_LAB_DEFINED;
	public static final boolean J9VM_BUILD_UMA;
	public static final boolean J9VM_BUILD_UMA_DEFINED;
	public static final boolean J9VM_BUILD_VM_CONTINUOUS;
	public static final boolean J9VM_BUILD_VM_CONTINUOUS_DEFINED;
	public static final boolean J9VM_BUILD__SE6_PACKAGE;
	public static final boolean J9VM_BUILD__SE6_PACKAGE_DEFINED;
	public static final boolean J9VM_BUILD__VS12_AND_HIGHER;
	public static final boolean J9VM_BUILD__VS12_AND_HIGHER_DEFINED;
	public static final boolean J9VM_COMPILER_PROMOTION;
	public static final boolean J9VM_COMPILER_PROMOTION_DEFINED;
	public static final boolean J9VM_DANGER_MEMLEAKS_BROKEN;
	public static final boolean J9VM_DANGER_MEMLEAKS_BROKEN_DEFINED;
	public static final boolean J9VM_ENV_ADVANCE_TOOLCHAIN;
	public static final boolean J9VM_ENV_ADVANCE_TOOLCHAIN_DEFINED;
	public static final boolean J9VM_ENV_CALL_VIA_TABLE;
	public static final boolean J9VM_ENV_CALL_VIA_TABLE_DEFINED;
	public static final boolean J9VM_ENV_DATA64_DEFINED;
	public static final boolean J9VM_ENV_DLPAR;
	public static final boolean J9VM_ENV_DLPAR_DEFINED;
	public static final boolean J9VM_ENV_GCC;
	public static final boolean J9VM_ENV_GCC_DEFINED;
	public static final boolean J9VM_ENV_HAS_FPU;
	public static final boolean J9VM_ENV_HAS_FPU_DEFINED;
	public static final boolean J9VM_ENV_LITTLE_ENDIAN_DEFINED;
	public static final boolean J9VM_ENV_SHARED_LIBS_CALLEE_GLOBAL_TABLE_SETUP;
	public static final boolean J9VM_ENV_SHARED_LIBS_CALLEE_GLOBAL_TABLE_SETUP_DEFINED;
	public static final boolean J9VM_ENV_SHARED_LIBS_USE_GLOBAL_TABLE;
	public static final boolean J9VM_ENV_SHARED_LIBS_USE_GLOBAL_TABLE_DEFINED;
	public static final boolean J9VM_ENV_SSE2_SUPPORT_DETECTION;
	public static final boolean J9VM_ENV_SSE2_SUPPORT_DETECTION_DEFINED;
	public static final boolean J9VM_ENV_Z_TPF;
	public static final boolean J9VM_ENV_Z_TPF_DEFINED;
	public static final boolean J9VM_GC_ADAPTIVE_TENURING;
	public static final boolean J9VM_GC_ADAPTIVE_TENURING_DEFINED;
	public static final boolean J9VM_GC_ALIGN_OBJECTS;
	public static final boolean J9VM_GC_ALIGN_OBJECTS_DEFINED;
	public static final boolean J9VM_GC_ALLOCATION_TAX;
	public static final boolean J9VM_GC_ALLOCATION_TAX_DEFINED;
	public static final boolean J9VM_GC_ALWAYS_CALL_OBJECT_ACCESS_BARRIER;
	public static final boolean J9VM_GC_ALWAYS_CALL_OBJECT_ACCESS_BARRIER_DEFINED;
	public static final boolean J9VM_GC_ALWAYS_CALL_WRITE_BARRIER;
	public static final boolean J9VM_GC_ALWAYS_CALL_WRITE_BARRIER_DEFINED;
	public static final boolean J9VM_GC_BATCH_CLEAR_TLH;
	public static final boolean J9VM_GC_BATCH_CLEAR_TLH_DEFINED;
	public static final boolean J9VM_GC_CLASSES_ON_HEAP;
	public static final boolean J9VM_GC_CLASSES_ON_HEAP_DEFINED;
	public static final boolean J9VM_GC_COMBINATION_SPEC_DEFINED;
	public static final boolean J9VM_GC_COMPRESSED_POINTERS_DEFINED;
	public static final boolean J9VM_GC_COMPRESSED_POINTER_BARRIER;
	public static final boolean J9VM_GC_COMPRESSED_POINTER_BARRIER_DEFINED;
	public static final boolean J9VM_GC_CONCURRENT_SWEEP;
	public static final boolean J9VM_GC_CONCURRENT_SWEEP_DEFINED;
	public static final boolean J9VM_GC_DEBUG_ASSERTS;
	public static final boolean J9VM_GC_DEBUG_ASSERTS_DEFINED;
	public static final boolean J9VM_GC_DYNAMIC_CLASS_UNLOADING_DEFINED;
	public static final boolean J9VM_GC_DYNAMIC_NEW_SPACE_SIZING;
	public static final boolean J9VM_GC_DYNAMIC_NEW_SPACE_SIZING_DEFINED;
	public static final boolean J9VM_GC_ENABLE_DOUBLE_MAP;
	public static final boolean J9VM_GC_ENABLE_DOUBLE_MAP_DEFINED;
	public static final boolean J9VM_GC_FINALIZATION_DEFINED;
	public static final boolean J9VM_GC_FRAGMENTED_HEAP;
	public static final boolean J9VM_GC_FRAGMENTED_HEAP_DEFINED;
	public static final boolean J9VM_GC_GENERATIONAL_DEFINED;
	public static final boolean J9VM_GC_HEAP_CARD_TABLE;
	public static final boolean J9VM_GC_HEAP_CARD_TABLE_DEFINED;
	public static final boolean J9VM_GC_INLINED_ALLOC_FIELDS_DEFINED;
	public static final boolean J9VM_GC_JNI_ARRAY_CACHE;
	public static final boolean J9VM_GC_JNI_ARRAY_CACHE_DEFINED;
	public static final boolean J9VM_GC_LARGE_OBJECT_AREA;
	public static final boolean J9VM_GC_LARGE_OBJECT_AREA_DEFINED;
	public static final boolean J9VM_GC_LEAF_BITS_DEFINED;
	public static final boolean J9VM_GC_MINIMUM_OBJECT_SIZE_DEFINED;
	public static final boolean J9VM_GC_MODRON_COMPACTION_DEFINED;
	public static final boolean J9VM_GC_MODRON_CONCURRENT_MARK;
	public static final boolean J9VM_GC_MODRON_CONCURRENT_MARK_DEFINED;
	public static final boolean J9VM_GC_MODRON_GC;
	public static final boolean J9VM_GC_MODRON_GC_DEFINED;
	public static final boolean J9VM_GC_MODRON_SCAVENGER_DEFINED;
	public static final boolean J9VM_GC_MODRON_STANDARD_DEFINED;
	public static final boolean J9VM_GC_MODRON_TRACE;
	public static final boolean J9VM_GC_MODRON_TRACE_DEFINED;
	public static final boolean J9VM_GC_MODRON_VERBOSE;
	public static final boolean J9VM_GC_MODRON_VERBOSE_DEFINED;
	public static final boolean J9VM_GC_NEW_SPINLOCK_SUPPORT;
	public static final boolean J9VM_GC_NEW_SPINLOCK_SUPPORT_DEFINED;
	public static final boolean J9VM_GC_NON_ZERO_TLH_DEFINED;
	public static final boolean J9VM_GC_OBJECT_ACCESS_BARRIER;
	public static final boolean J9VM_GC_OBJECT_ACCESS_BARRIER_DEFINED;
	public static final boolean J9VM_GC_REALTIME_DEFINED;
	public static final boolean J9VM_GC_SEGREGATED_HEAP_DEFINED;
	public static final boolean J9VM_GC_STRICT_OMR;
	public static final boolean J9VM_GC_STRICT_OMR_DEFINED;
	public static final boolean J9VM_GC_SUBPOOLS;
	public static final boolean J9VM_GC_SUBPOOLS_ALIAS;
	public static final boolean J9VM_GC_SUBPOOLS_ALIAS_DEFINED;
	public static final boolean J9VM_GC_SUBPOOLS_DEFINED;
	public static final boolean J9VM_GC_THREAD_LOCAL_HEAP;
	public static final boolean J9VM_GC_THREAD_LOCAL_HEAP_DEFINED;
	public static final boolean J9VM_GC_TILTED_NEW_SPACE;
	public static final boolean J9VM_GC_TILTED_NEW_SPACE_DEFINED;
	public static final boolean J9VM_GC_TLH_PREFETCH_FTA;
	public static final boolean J9VM_GC_TLH_PREFETCH_FTA_DEFINED;
	public static final boolean J9VM_GC_USE_INLINE_ALLOCATE;
	public static final boolean J9VM_GC_USE_INLINE_ALLOCATE_DEFINED;
	public static final boolean J9VM_GC_VERIFY_ACCESS_BARRIER;
	public static final boolean J9VM_GC_VERIFY_ACCESS_BARRIER_DEFINED;
	public static final boolean J9VM_GC_VLHGC_DEFINED;
	public static final boolean J9VM_INTERP_AOT_COMPILE_SUPPORT;
	public static final boolean J9VM_INTERP_AOT_COMPILE_SUPPORT_DEFINED;
	public static final boolean J9VM_INTERP_AOT_RUNTIME_SUPPORT;
	public static final boolean J9VM_INTERP_AOT_RUNTIME_SUPPORT_DEFINED;
	public static final boolean J9VM_INTERP_ATOMIC_FREE_JNI;
	public static final boolean J9VM_INTERP_ATOMIC_FREE_JNI_DEFINED;
	public static final boolean J9VM_INTERP_ATOMIC_FREE_JNI_USES_FLUSH;
	public static final boolean J9VM_INTERP_ATOMIC_FREE_JNI_USES_FLUSH_DEFINED;
	public static final boolean J9VM_INTERP_BYTECODE_PREVERIFICATION;
	public static final boolean J9VM_INTERP_BYTECODE_PREVERIFICATION_DEFINED;
	public static final boolean J9VM_INTERP_BYTECODE_VERIFICATION;
	public static final boolean J9VM_INTERP_BYTECODE_VERIFICATION_DEFINED;
	public static final boolean J9VM_INTERP_COMPRESSED_OBJECT_HEADER_DEFINED;
	public static final boolean J9VM_INTERP_CUSTOM_SPIN_OPTIONS;
	public static final boolean J9VM_INTERP_CUSTOM_SPIN_OPTIONS_DEFINED;
	public static final boolean J9VM_INTERP_DEBUG_SUPPORT_DEFINED;
	public static final boolean J9VM_INTERP_ENABLE_JIT_ON_DESKTOP;
	public static final boolean J9VM_INTERP_ENABLE_JIT_ON_DESKTOP_DEFINED;
	public static final boolean J9VM_INTERP_FLAGS_IN_CLASS_SLOT_DEFINED;
	public static final boolean J9VM_INTERP_FLOATMATHLIB_TRACING;
	public static final boolean J9VM_INTERP_FLOATMATHLIB_TRACING_DEFINED;
	public static final boolean J9VM_INTERP_FLOATMATH_TRACING;
	public static final boolean J9VM_INTERP_FLOATMATH_TRACING_DEFINED;
	public static final boolean J9VM_INTERP_FLOAT_SUPPORT;
	public static final boolean J9VM_INTERP_FLOAT_SUPPORT_DEFINED;
	public static final boolean J9VM_INTERP_GP_HANDLER;
	public static final boolean J9VM_INTERP_GP_HANDLER_DEFINED;
	public static final boolean J9VM_INTERP_GROWABLE_STACKS_DEFINED;
	public static final boolean J9VM_INTERP_HOT_CODE_REPLACEMENT_DEFINED;
	public static final boolean J9VM_INTERP_JIT_ON_BY_DEFAULT;
	public static final boolean J9VM_INTERP_JIT_ON_BY_DEFAULT_DEFINED;
	public static final boolean J9VM_INTERP_JNI_SUPPORT;
	public static final boolean J9VM_INTERP_JNI_SUPPORT_DEFINED;
	public static final boolean J9VM_INTERP_MINIMAL_JCL;
	public static final boolean J9VM_INTERP_MINIMAL_JCL_DEFINED;
	public static final boolean J9VM_INTERP_MINIMAL_JNI;
	public static final boolean J9VM_INTERP_MINIMAL_JNI_DEFINED;
	public static final boolean J9VM_INTERP_NATIVE_SUPPORT_DEFINED;
	public static final boolean J9VM_INTERP_NEW_HEADER_SHAPE;
	public static final boolean J9VM_INTERP_NEW_HEADER_SHAPE_DEFINED;
	public static final boolean J9VM_INTERP_PROFILING_BYTECODES;
	public static final boolean J9VM_INTERP_PROFILING_BYTECODES_DEFINED;
	public static final boolean J9VM_INTERP_ROMABLE_AOT_SUPPORT;
	public static final boolean J9VM_INTERP_ROMABLE_AOT_SUPPORT_DEFINED;
	public static final boolean J9VM_INTERP_SIG_QUIT_THREAD;
	public static final boolean J9VM_INTERP_SIG_QUIT_THREAD_DEFINED;
	public static final boolean J9VM_INTERP_SIG_QUIT_THREAD_USES_SEMAPHORES;
	public static final boolean J9VM_INTERP_SIG_QUIT_THREAD_USES_SEMAPHORES_DEFINED;
	public static final boolean J9VM_INTERP_SMALL_MONITOR_SLOT_DEFINED;
	public static final boolean J9VM_INTERP_TRACING;
	public static final boolean J9VM_INTERP_TRACING_DEFINED;
	public static final boolean J9VM_INTERP_TWO_PASS_EXCLUSIVE;
	public static final boolean J9VM_INTERP_TWO_PASS_EXCLUSIVE_DEFINED;
	public static final boolean J9VM_INTERP_UPDATE_VMCTRACING;
	public static final boolean J9VM_INTERP_UPDATE_VMCTRACING_DEFINED;
	public static final boolean J9VM_INTERP_USE_SPLIT_SIDE_TABLES;
	public static final boolean J9VM_INTERP_USE_SPLIT_SIDE_TABLES_DEFINED;
	public static final boolean J9VM_INTERP_USE_UNSAFE_HELPER;
	public static final boolean J9VM_INTERP_USE_UNSAFE_HELPER_DEFINED;
	public static final boolean J9VM_INTERP_VERBOSE;
	public static final boolean J9VM_INTERP_VERBOSE_DEFINED;
	public static final boolean J9VM_IVE_JXE_FILE_RELOCATOR;
	public static final boolean J9VM_IVE_JXE_FILE_RELOCATOR_DEFINED;
	public static final boolean J9VM_IVE_JXE_IN_PLACE_RELOCATOR;
	public static final boolean J9VM_IVE_JXE_IN_PLACE_RELOCATOR_DEFINED;
	public static final boolean J9VM_IVE_JXE_NATIVES;
	public static final boolean J9VM_IVE_JXE_NATIVES_DEFINED;
	public static final boolean J9VM_IVE_JXE_OERELOCATOR;
	public static final boolean J9VM_IVE_JXE_OERELOCATOR_DEFINED;
	public static final boolean J9VM_IVE_JXE_STREAMING_RELOCATOR;
	public static final boolean J9VM_IVE_JXE_STREAMING_RELOCATOR_DEFINED;
	public static final boolean J9VM_IVE_MEMORY_SPACE_HELPERS;
	public static final boolean J9VM_IVE_MEMORY_SPACE_HELPERS_DEFINED;
	public static final boolean J9VM_IVE_ROM_IMAGE_HELPERS;
	public static final boolean J9VM_IVE_ROM_IMAGE_HELPERS_DEFINED;
	public static final boolean J9VM_JIT_32BIT_USES64BIT_REGISTERS_DEFINED;
	public static final boolean J9VM_JIT_CLASS_UNLOAD_RWMONITOR;
	public static final boolean J9VM_JIT_CLASS_UNLOAD_RWMONITOR_DEFINED;
	public static final boolean J9VM_JIT_C_HELPERS;
	public static final boolean J9VM_JIT_C_HELPERS_DEFINED;
	public static final boolean J9VM_JIT_DYNAMIC_LOOP_TRANSFER;
	public static final boolean J9VM_JIT_DYNAMIC_LOOP_TRANSFER_DEFINED;
	public static final boolean J9VM_JIT_FREE_SYSTEM_STACK_POINTER;
	public static final boolean J9VM_JIT_FREE_SYSTEM_STACK_POINTER_DEFINED;
	public static final boolean J9VM_JIT_FULL_SPEED_DEBUG_DEFINED;
	public static final boolean J9VM_JIT_GC_ON_RESOLVE_SUPPORT;
	public static final boolean J9VM_JIT_GC_ON_RESOLVE_SUPPORT_DEFINED;
	public static final boolean J9VM_JIT_IA32_FIXED_FRAME;
	public static final boolean J9VM_JIT_IA32_FIXED_FRAME_DEFINED;
	public static final boolean J9VM_JIT_MICRO_JIT;
	public static final boolean J9VM_JIT_MICRO_JIT_DEFINED;
	public static final boolean J9VM_JIT_NATHELP_USES_CLASS_OBJECTS;
	public static final boolean J9VM_JIT_NATHELP_USES_CLASS_OBJECTS_DEFINED;
	public static final boolean J9VM_JIT_NEEDS_TRAMPOLINES;
	public static final boolean J9VM_JIT_NEEDS_TRAMPOLINES_DEFINED;
	public static final boolean J9VM_JIT_NEW_DUAL_HELPERS;
	public static final boolean J9VM_JIT_NEW_DUAL_HELPERS_DEFINED;
	public static final boolean J9VM_JIT_NEW_INSTANCE_PROTOTYPE;
	public static final boolean J9VM_JIT_NEW_INSTANCE_PROTOTYPE_DEFINED;
	public static final boolean J9VM_JIT_ON_STACK_REPLACEMENT;
	public static final boolean J9VM_JIT_ON_STACK_REPLACEMENT_DEFINED;
	public static final boolean J9VM_JIT_REQUIRES_TRAP_HANDLER;
	public static final boolean J9VM_JIT_REQUIRES_TRAP_HANDLER_DEFINED;
	public static final boolean J9VM_JIT_RUNTIME_INSTRUMENTATION;
	public static final boolean J9VM_JIT_RUNTIME_INSTRUMENTATION_DEFINED;
	public static final boolean J9VM_JIT_SMALL;
	public static final boolean J9VM_JIT_SMALL_DEFINED;
	public static final boolean J9VM_JIT_SUPPORTS_DIRECT_JNI;
	public static final boolean J9VM_JIT_SUPPORTS_DIRECT_JNI_DEFINED;
	public static final boolean J9VM_JIT_TRANSACTION_DIAGNOSTIC_THREAD_BLOCK;
	public static final boolean J9VM_JIT_TRANSACTION_DIAGNOSTIC_THREAD_BLOCK_DEFINED;
	public static final boolean J9VM_MATH_DIRECT_HELPERS;
	public static final boolean J9VM_MATH_DIRECT_HELPERS_DEFINED;
	public static final boolean J9VM_OPT_ANNOTATIONS;
	public static final boolean J9VM_OPT_ANNOTATIONS_DEFINED;
	public static final boolean J9VM_OPT_BIG_INTEGER;
	public static final boolean J9VM_OPT_BIG_INTEGER_DEFINED;
	public static final boolean J9VM_OPT_CUDA;
	public static final boolean J9VM_OPT_CUDA_DEFINED;
	public static final boolean J9VM_OPT_DEBUG_INFO_SERVER_DEFINED;
	public static final boolean J9VM_OPT_DEBUG_JSR45_SUPPORT;
	public static final boolean J9VM_OPT_DEBUG_JSR45_SUPPORT_DEFINED;
	public static final boolean J9VM_OPT_DEPRECATED_METHODS;
	public static final boolean J9VM_OPT_DEPRECATED_METHODS_DEFINED;
	public static final boolean J9VM_OPT_DMA_NATIVES;
	public static final boolean J9VM_OPT_DMA_NATIVES_DEFINED;
	public static final boolean J9VM_OPT_DYNAMIC_LOAD_SUPPORT;
	public static final boolean J9VM_OPT_DYNAMIC_LOAD_SUPPORT_DEFINED;
	public static final boolean J9VM_OPT_FIPS;
	public static final boolean J9VM_OPT_FIPS_DEFINED;
	public static final boolean J9VM_OPT_FRAGMENT_RAM_CLASSES;
	public static final boolean J9VM_OPT_FRAGMENT_RAM_CLASSES_DEFINED;
	public static final boolean J9VM_OPT_INLINE_JSRS;
	public static final boolean J9VM_OPT_INLINE_JSRS_DEFINED;
	public static final boolean J9VM_OPT_INVARIANT_INTERNING;
	public static final boolean J9VM_OPT_INVARIANT_INTERNING_DEFINED;
	public static final boolean J9VM_OPT_JAVA_OFFLOAD_SUPPORT;
	public static final boolean J9VM_OPT_JAVA_OFFLOAD_SUPPORT_DEFINED;
	public static final boolean J9VM_OPT_JITSERVER;
	public static final boolean J9VM_OPT_JITSERVER_DEFINED;
	public static final boolean J9VM_OPT_JVMTI_DEFINED;
	public static final boolean J9VM_OPT_JXE_LOAD_SUPPORT;
	public static final boolean J9VM_OPT_JXE_LOAD_SUPPORT_DEFINED;
	public static final boolean J9VM_OPT_MEMORY_CHECK_SUPPORT;
	public static final boolean J9VM_OPT_MEMORY_CHECK_SUPPORT_DEFINED;
	public static final boolean J9VM_OPT_METHOD_HANDLE;
	public static final boolean J9VM_OPT_METHOD_HANDLE_COMMON;
	public static final boolean J9VM_OPT_METHOD_HANDLE_COMMON_DEFINED;
	public static final boolean J9VM_OPT_METHOD_HANDLE_DEFINED;
	public static final boolean J9VM_OPT_MODULE;
	public static final boolean J9VM_OPT_MODULE_DEFINED;
	public static final boolean J9VM_OPT_MULTI_LAYER_SHARED_CLASS_CACHE;
	public static final boolean J9VM_OPT_MULTI_LAYER_SHARED_CLASS_CACHE_DEFINED;
	public static final boolean J9VM_OPT_MULTI_VM;
	public static final boolean J9VM_OPT_MULTI_VM_DEFINED;
	public static final boolean J9VM_OPT_NATIVE_CHARACTER_CONVERTER;
	public static final boolean J9VM_OPT_NATIVE_CHARACTER_CONVERTER_DEFINED;
	public static final boolean J9VM_OPT_NATIVE_LOCALE_SUPPORT;
	public static final boolean J9VM_OPT_NATIVE_LOCALE_SUPPORT_DEFINED;
	public static final boolean J9VM_OPT_NEW_OBJECT_HASH;
	public static final boolean J9VM_OPT_NEW_OBJECT_HASH_DEFINED;
	public static final boolean J9VM_OPT_NEW_ROM_CLASS_BUILDER;
	public static final boolean J9VM_OPT_NEW_ROM_CLASS_BUILDER_DEFINED;
	public static final boolean J9VM_OPT_NO_CLASSLOADERS;
	public static final boolean J9VM_OPT_NO_CLASSLOADERS_DEFINED;
	public static final boolean J9VM_OPT_NRR;
	public static final boolean J9VM_OPT_NRR_DEFINED;
	public static final boolean J9VM_OPT_OPENJDK_METHODHANDLE;
	public static final boolean J9VM_OPT_OPENJDK_METHODHANDLE_DEFINED;
	public static final boolean J9VM_OPT_PACKED;
	public static final boolean J9VM_OPT_PACKED_DEFINED;
	public static final boolean J9VM_OPT_PANAMA;
	public static final boolean J9VM_OPT_PANAMA_DEFINED;
	public static final boolean J9VM_OPT_PHP_SUPPORT;
	public static final boolean J9VM_OPT_PHP_SUPPORT_DEFINED;
	public static final boolean J9VM_OPT_REFLECT;
	public static final boolean J9VM_OPT_REFLECT_DEFINED;
	public static final boolean J9VM_OPT_RESOURCE_MANAGED;
	public static final boolean J9VM_OPT_RESOURCE_MANAGED_DEFINED;
	public static final boolean J9VM_OPT_ROM_IMAGE_SUPPORT;
	public static final boolean J9VM_OPT_ROM_IMAGE_SUPPORT_DEFINED;
	public static final boolean J9VM_OPT_SHARED_CLASSES_DEFINED;
	public static final boolean J9VM_OPT_SIDECAR;
	public static final boolean J9VM_OPT_SIDECAR_DEFINED;
	public static final boolean J9VM_OPT_SRP_AVL_TREE_SUPPORT;
	public static final boolean J9VM_OPT_SRP_AVL_TREE_SUPPORT_DEFINED;
	public static final boolean J9VM_OPT_STRING_COMPRESSION;
	public static final boolean J9VM_OPT_STRING_COMPRESSION_DEFINED;
	public static final boolean J9VM_OPT_SWITCH_STACKS_FOR_SIGNAL_HANDLER;
	public static final boolean J9VM_OPT_SWITCH_STACKS_FOR_SIGNAL_HANDLER_DEFINED;
	public static final boolean J9VM_OPT_TEMP_NEW_INTERFACE_INVOCATION;
	public static final boolean J9VM_OPT_TEMP_NEW_INTERFACE_INVOCATION_DEFINED;
	public static final boolean J9VM_OPT_USE_FFI;
	public static final boolean J9VM_OPT_USE_FFI_DEFINED;
	public static final boolean J9VM_OPT_USE_FFI_ONLY;
	public static final boolean J9VM_OPT_USE_FFI_ONLY_DEFINED;
	public static final boolean J9VM_OPT_USE_OMR_DDR;
	public static final boolean J9VM_OPT_USE_OMR_DDR_DEFINED;
	public static final boolean J9VM_OPT_VALHALLA_VALUE_TYPES;
	public static final boolean J9VM_OPT_VALHALLA_VALUE_TYPES_DEFINED;
	public static final boolean J9VM_OPT_VEE_SUPPORT;
	public static final boolean J9VM_OPT_VEE_SUPPORT_DEFINED;
	public static final boolean J9VM_OPT_VM_LOCAL_STORAGE;
	public static final boolean J9VM_OPT_VM_LOCAL_STORAGE_DEFINED;
	public static final boolean J9VM_OPT_ZERO;
	public static final boolean J9VM_OPT_ZERO_DEFINED;
	public static final boolean J9VM_OPT_ZIP_SUPPORT;
	public static final boolean J9VM_OPT_ZIP_SUPPORT_DEFINED;
	public static final boolean J9VM_OPT_ZLIB_COMPRESSION;
	public static final boolean J9VM_OPT_ZLIB_COMPRESSION_DEFINED;
	public static final boolean J9VM_OPT_ZLIB_SUPPORT;
	public static final boolean J9VM_OPT_ZLIB_SUPPORT_DEFINED;
	public static final boolean J9VM_PORT_OMRSIG_SUPPORT;
	public static final boolean J9VM_PORT_OMRSIG_SUPPORT_DEFINED;
	public static final boolean J9VM_PORT_RUNTIME_INSTRUMENTATION;
	public static final boolean J9VM_PORT_RUNTIME_INSTRUMENTATION_DEFINED;
	public static final boolean J9VM_PORT_SIGNAL_SUPPORT;
	public static final boolean J9VM_PORT_SIGNAL_SUPPORT_DEFINED;
	public static final boolean J9VM_PORT_ZOS_CEEHDLRSUPPORT;
	public static final boolean J9VM_PORT_ZOS_CEEHDLRSUPPORT_DEFINED;
	public static final boolean J9VM_PROF_COUNT_ARGS_TEMPS;
	public static final boolean J9VM_PROF_COUNT_ARGS_TEMPS_DEFINED;
	public static final boolean J9VM_PROF_EVENT_REPORTING;
	public static final boolean J9VM_PROF_EVENT_REPORTING_DEFINED;
	public static final boolean J9VM_PROF_JVMTI;
	public static final boolean J9VM_PROF_JVMTI_DEFINED;
	public static final boolean J9VM_RAS_DUMP_AGENTS;
	public static final boolean J9VM_RAS_DUMP_AGENTS_DEFINED;
	public static final boolean J9VM_RAS_EYECATCHERS;
	public static final boolean J9VM_RAS_EYECATCHERS_DEFINED;
	public static final boolean J9VM_RAS_FATAL_ASSERT;
	public static final boolean J9VM_RAS_FATAL_ASSERT_DEFINED;
	public static final boolean J9VM_SIZE_OPTIMIZE_SEND_TARGETS;
	public static final boolean J9VM_SIZE_OPTIMIZE_SEND_TARGETS_DEFINED;
	public static final boolean J9VM_SIZE_SMALL_CODE;
	public static final boolean J9VM_SIZE_SMALL_CODE_DEFINED;
	public static final boolean J9VM_SIZE_SMALL_OS_STACK;
	public static final boolean J9VM_SIZE_SMALL_OS_STACK_DEFINED;
	public static final boolean J9VM_SIZE_SMALL_RAM;
	public static final boolean J9VM_SIZE_SMALL_RAM_DEFINED;
	public static final boolean J9VM_TEMP_ALIGN_CLASS_SLOT;
	public static final boolean J9VM_TEMP_ALIGN_CLASS_SLOT_DEFINED;
	public static final boolean J9VM_TEMP_KEEP_FLAGS_SLOT;
	public static final boolean J9VM_TEMP_KEEP_FLAGS_SLOT_DEFINED;
	public static final boolean J9VM_THR_ASYNC_NAME_UPDATE;
	public static final boolean J9VM_THR_ASYNC_NAME_UPDATE_DEFINED;
	public static final boolean J9VM_THR_EXTRA_CHECKS;
	public static final boolean J9VM_THR_EXTRA_CHECKS_DEFINED;
	public static final boolean J9VM_THR_JLM_HST;
	public static final boolean J9VM_THR_JLM_HST_DEFINED;
	public static final boolean J9VM_THR_LOCK_NURSERY_DEFINED;
	public static final boolean J9VM_THR_LOCK_NURSERY_FAT_ARRAYS;
	public static final boolean J9VM_THR_LOCK_NURSERY_FAT_ARRAYS_DEFINED;
	public static final boolean J9VM_THR_LOCK_RESERVATION_DEFINED;
	public static final boolean J9VM_THR_PREEMPTIVE;
	public static final boolean J9VM_THR_PREEMPTIVE_DEFINED;
	public static final boolean J9VM_THR_SMART_DEFLATION;
	public static final boolean J9VM_THR_SMART_DEFLATION_DEFINED;
	public static final boolean J9_COPYRIGHT_STRING_DEFINED;
	public static final boolean JAVA_SPEC_VERSION;
	public static final boolean JAVA_SPEC_VERSION_DEFINED;
	public static final boolean JAVA_SPEC_VERSION_STRING_DEFINED;
	public static final boolean arch_aarch64;
	public static final boolean arch_arm;
	public static final boolean arch_power;
	public static final boolean arch_riscv;
	public static final boolean arch_s390;
	public static final boolean arch_x86;
	public static final boolean env_data64;
	public static final boolean env_littleEndian;
	public static final boolean gc_combinationSpec;
	public static final boolean gc_compressedPointers;
	public static final boolean gc_dynamicClassUnloading;
	public static final boolean gc_finalization;
	public static final boolean gc_generational;
	public static final boolean gc_inlinedAllocFields;
	public static final boolean gc_leafBits;
	public static final boolean gc_minimumObjectSize;
	public static final boolean gc_modronCompaction;
	public static final boolean gc_modronScavenger;
	public static final boolean gc_modronStandard;
	public static final boolean gc_nonZeroTLH;
	public static final boolean gc_realtime;
	public static final boolean gc_segregatedHeap;
	public static final boolean gc_vlhgc;
	public static final boolean interp_compressedObjectHeader;
	public static final boolean interp_debugSupport;
	public static final boolean interp_flagsInClassSlot;
	public static final boolean interp_growableStacks;
	public static final boolean interp_hotCodeReplacement;
	public static final boolean interp_nativeSupport;
	public static final boolean interp_smallMonitorSlot;
	public static final boolean jit_32bitUses64bitRegisters;
	public static final boolean jit_fullSpeedDebug;
	public static final boolean opt_debugInfoServer;
	public static final boolean opt_jvmti;
	public static final boolean opt_sharedClasses;
	public static final boolean thr_lockNursery;
	public static final boolean thr_lockReservation;

	static {
		HashSet<String> flags$ = new HashSet<>();

		try {
			ClassLoader loader$ = J9BuildFlags.class.getClassLoader();
			if (!(loader$ instanceof com.ibm.j9ddr.J9DDRClassLoader)) {
				throw new IllegalArgumentException("Cannot determine the runtime loader");
			}
			Class<?> runtimeClass = ((com.ibm.j9ddr.J9DDRClassLoader) loader$).loadClassRelativeToStream("structure.J9BuildFlags", false);
			for (Field field : runtimeClass.getFields()) {
				if (field.getLong(runtimeClass) != 0) {
					flags$.add(field.getName());
				}
			}
		} catch (ClassNotFoundException | IllegalAccessException e) {
			throw new IllegalArgumentException(String.format("Can not initialize flags from core file.%n%s", e.getMessage()));
		}

		EsExtraVersionString_DEFINED = flags$.contains("EsExtraVersionString_DEFINED");
		EsVersionMajor = flags$.contains("EsVersionMajor");
		EsVersionMajor_DEFINED = flags$.contains("EsVersionMajor_DEFINED");
		EsVersionMinor = flags$.contains("EsVersionMinor");
		EsVersionMinor_DEFINED = flags$.contains("EsVersionMinor_DEFINED");
		EsVersionString_DEFINED = flags$.contains("EsVersionString_DEFINED");
		J9VM_ARCH_AARCH64 = flags$.contains("J9VM_ARCH_AARCH64");
		J9VM_ARCH_AARCH64_DEFINED = flags$.contains("J9VM_ARCH_AARCH64_DEFINED");
		J9VM_ARCH_ARM = flags$.contains("J9VM_ARCH_ARM");
		J9VM_ARCH_ARM_DEFINED = flags$.contains("J9VM_ARCH_ARM_DEFINED");
		J9VM_ARCH_POWER = flags$.contains("J9VM_ARCH_POWER");
		J9VM_ARCH_POWER_DEFINED = flags$.contains("J9VM_ARCH_POWER_DEFINED");
		J9VM_ARCH_RISCV = flags$.contains("J9VM_ARCH_RISCV");
		J9VM_ARCH_RISCV_DEFINED = flags$.contains("J9VM_ARCH_RISCV_DEFINED");
		J9VM_ARCH_S390_DEFINED = flags$.contains("J9VM_ARCH_S390_DEFINED");
		J9VM_ARCH_X86 = flags$.contains("J9VM_ARCH_X86");
		J9VM_ARCH_X86_DEFINED = flags$.contains("J9VM_ARCH_X86_DEFINED");
		J9VM_BUILD_AUTOBUILD = flags$.contains("J9VM_BUILD_AUTOBUILD");
		J9VM_BUILD_AUTOBUILD_DEFINED = flags$.contains("J9VM_BUILD_AUTOBUILD_DEFINED");
		J9VM_BUILD_CMAKE = flags$.contains("J9VM_BUILD_CMAKE");
		J9VM_BUILD_CMAKE_DEFINED = flags$.contains("J9VM_BUILD_CMAKE_DEFINED");
		J9VM_BUILD_DROP_TO_HURSLEY = flags$.contains("J9VM_BUILD_DROP_TO_HURSLEY");
		J9VM_BUILD_DROP_TO_HURSLEY_DEFINED = flags$.contains("J9VM_BUILD_DROP_TO_HURSLEY_DEFINED");
		J9VM_BUILD_DROP_TO_PHOENIX = flags$.contains("J9VM_BUILD_DROP_TO_PHOENIX");
		J9VM_BUILD_DROP_TO_PHOENIX_DEFINED = flags$.contains("J9VM_BUILD_DROP_TO_PHOENIX_DEFINED");
		J9VM_BUILD_DROP_TO_TORONTO = flags$.contains("J9VM_BUILD_DROP_TO_TORONTO");
		J9VM_BUILD_DROP_TO_TORONTO_DEFINED = flags$.contains("J9VM_BUILD_DROP_TO_TORONTO_DEFINED");
		J9VM_BUILD_FIPS = flags$.contains("J9VM_BUILD_FIPS");
		J9VM_BUILD_FIPS_DEFINED = flags$.contains("J9VM_BUILD_FIPS_DEFINED");
		J9VM_BUILD_GC_CONTINUOUS = flags$.contains("J9VM_BUILD_GC_CONTINUOUS");
		J9VM_BUILD_GC_CONTINUOUS_DEFINED = flags$.contains("J9VM_BUILD_GC_CONTINUOUS_DEFINED");
		J9VM_BUILD_J2ME = flags$.contains("J9VM_BUILD_J2ME");
		J9VM_BUILD_J2ME_DEFINED = flags$.contains("J9VM_BUILD_J2ME_DEFINED");
		J9VM_BUILD_J2SE = flags$.contains("J9VM_BUILD_J2SE");
		J9VM_BUILD_J2SE_DEFINED = flags$.contains("J9VM_BUILD_J2SE_DEFINED");
		J9VM_BUILD_J9VM_DOC = flags$.contains("J9VM_BUILD_J9VM_DOC");
		J9VM_BUILD_J9VM_DOC_DEFINED = flags$.contains("J9VM_BUILD_J9VM_DOC_DEFINED");
		J9VM_BUILD_JAVA5 = flags$.contains("J9VM_BUILD_JAVA5");
		J9VM_BUILD_JAVA5_DEFINED = flags$.contains("J9VM_BUILD_JAVA5_DEFINED");
		J9VM_BUILD_JAVA6 = flags$.contains("J9VM_BUILD_JAVA6");
		J9VM_BUILD_JAVA60_26 = flags$.contains("J9VM_BUILD_JAVA60_26");
		J9VM_BUILD_JAVA60_26_DEFINED = flags$.contains("J9VM_BUILD_JAVA60_26_DEFINED");
		J9VM_BUILD_JAVA6PROXY = flags$.contains("J9VM_BUILD_JAVA6PROXY");
		J9VM_BUILD_JAVA6PROXY_DEFINED = flags$.contains("J9VM_BUILD_JAVA6PROXY_DEFINED");
		J9VM_BUILD_JAVA6_DEFINED = flags$.contains("J9VM_BUILD_JAVA6_DEFINED");
		J9VM_BUILD_JAVA7 = flags$.contains("J9VM_BUILD_JAVA7");
		J9VM_BUILD_JAVA70_27 = flags$.contains("J9VM_BUILD_JAVA70_27");
		J9VM_BUILD_JAVA70_27_DEFINED = flags$.contains("J9VM_BUILD_JAVA70_27_DEFINED");
		J9VM_BUILD_JAVA7BASIC = flags$.contains("J9VM_BUILD_JAVA7BASIC");
		J9VM_BUILD_JAVA7BASIC_DEFINED = flags$.contains("J9VM_BUILD_JAVA7BASIC_DEFINED");
		J9VM_BUILD_JAVA7RAW = flags$.contains("J9VM_BUILD_JAVA7RAW");
		J9VM_BUILD_JAVA7RAW_DEFINED = flags$.contains("J9VM_BUILD_JAVA7RAW_DEFINED");
		J9VM_BUILD_JAVA7_DEFINED = flags$.contains("J9VM_BUILD_JAVA7_DEFINED");
		J9VM_BUILD_JAVA8 = flags$.contains("J9VM_BUILD_JAVA8");
		J9VM_BUILD_JAVA8RAW = flags$.contains("J9VM_BUILD_JAVA8RAW");
		J9VM_BUILD_JAVA8RAW_DEFINED = flags$.contains("J9VM_BUILD_JAVA8RAW_DEFINED");
		J9VM_BUILD_JAVA8_DEFINED = flags$.contains("J9VM_BUILD_JAVA8_DEFINED");
		J9VM_BUILD_JAVA9 = flags$.contains("J9VM_BUILD_JAVA9");
		J9VM_BUILD_JAVA9_DEFINED = flags$.contains("J9VM_BUILD_JAVA9_DEFINED");
		J9VM_BUILD_NEW_COMPILER = flags$.contains("J9VM_BUILD_NEW_COMPILER");
		J9VM_BUILD_NEW_COMPILER_DEFINED = flags$.contains("J9VM_BUILD_NEW_COMPILER_DEFINED");
		J9VM_BUILD_OPENJ9 = flags$.contains("J9VM_BUILD_OPENJ9");
		J9VM_BUILD_OPENJ9_DEFINED = flags$.contains("J9VM_BUILD_OPENJ9_DEFINED");
		J9VM_BUILD_OUNCEMAKE = flags$.contains("J9VM_BUILD_OUNCEMAKE");
		J9VM_BUILD_OUNCEMAKE_DEFINED = flags$.contains("J9VM_BUILD_OUNCEMAKE_DEFINED");
		J9VM_BUILD_PRODUCT = flags$.contains("J9VM_BUILD_PRODUCT");
		J9VM_BUILD_PRODUCT_DEFINED = flags$.contains("J9VM_BUILD_PRODUCT_DEFINED");
		J9VM_BUILD_REALTIME = flags$.contains("J9VM_BUILD_REALTIME");
		J9VM_BUILD_REALTIME_DEFINED = flags$.contains("J9VM_BUILD_REALTIME_DEFINED");
		J9VM_BUILD_STAGE_OTTAWA_VMLAB = flags$.contains("J9VM_BUILD_STAGE_OTTAWA_VMLAB");
		J9VM_BUILD_STAGE_OTTAWA_VMLAB_DEFINED = flags$.contains("J9VM_BUILD_STAGE_OTTAWA_VMLAB_DEFINED");
		J9VM_BUILD_STAGE_TORONTO_LAB = flags$.contains("J9VM_BUILD_STAGE_TORONTO_LAB");
		J9VM_BUILD_STAGE_TORONTO_LAB_DEFINED = flags$.contains("J9VM_BUILD_STAGE_TORONTO_LAB_DEFINED");
		J9VM_BUILD_UMA = flags$.contains("J9VM_BUILD_UMA");
		J9VM_BUILD_UMA_DEFINED = flags$.contains("J9VM_BUILD_UMA_DEFINED");
		J9VM_BUILD_VM_CONTINUOUS = flags$.contains("J9VM_BUILD_VM_CONTINUOUS");
		J9VM_BUILD_VM_CONTINUOUS_DEFINED = flags$.contains("J9VM_BUILD_VM_CONTINUOUS_DEFINED");
		J9VM_BUILD__SE6_PACKAGE = flags$.contains("J9VM_BUILD__SE6_PACKAGE");
		J9VM_BUILD__SE6_PACKAGE_DEFINED = flags$.contains("J9VM_BUILD__SE6_PACKAGE_DEFINED");
		J9VM_BUILD__VS12_AND_HIGHER = flags$.contains("J9VM_BUILD__VS12_AND_HIGHER");
		J9VM_BUILD__VS12_AND_HIGHER_DEFINED = flags$.contains("J9VM_BUILD__VS12_AND_HIGHER_DEFINED");
		J9VM_COMPILER_PROMOTION = flags$.contains("J9VM_COMPILER_PROMOTION");
		J9VM_COMPILER_PROMOTION_DEFINED = flags$.contains("J9VM_COMPILER_PROMOTION_DEFINED");
		J9VM_DANGER_MEMLEAKS_BROKEN = flags$.contains("J9VM_DANGER_MEMLEAKS_BROKEN");
		J9VM_DANGER_MEMLEAKS_BROKEN_DEFINED = flags$.contains("J9VM_DANGER_MEMLEAKS_BROKEN_DEFINED");
		J9VM_ENV_ADVANCE_TOOLCHAIN = flags$.contains("J9VM_ENV_ADVANCE_TOOLCHAIN");
		J9VM_ENV_ADVANCE_TOOLCHAIN_DEFINED = flags$.contains("J9VM_ENV_ADVANCE_TOOLCHAIN_DEFINED");
		J9VM_ENV_CALL_VIA_TABLE = flags$.contains("J9VM_ENV_CALL_VIA_TABLE");
		J9VM_ENV_CALL_VIA_TABLE_DEFINED = flags$.contains("J9VM_ENV_CALL_VIA_TABLE_DEFINED");
		J9VM_ENV_DATA64_DEFINED = flags$.contains("J9VM_ENV_DATA64_DEFINED");
		J9VM_ENV_DLPAR = flags$.contains("J9VM_ENV_DLPAR");
		J9VM_ENV_DLPAR_DEFINED = flags$.contains("J9VM_ENV_DLPAR_DEFINED");
		J9VM_ENV_GCC = flags$.contains("J9VM_ENV_GCC");
		J9VM_ENV_GCC_DEFINED = flags$.contains("J9VM_ENV_GCC_DEFINED");
		J9VM_ENV_HAS_FPU = flags$.contains("J9VM_ENV_HAS_FPU");
		J9VM_ENV_HAS_FPU_DEFINED = flags$.contains("J9VM_ENV_HAS_FPU_DEFINED");
		J9VM_ENV_LITTLE_ENDIAN_DEFINED = flags$.contains("J9VM_ENV_LITTLE_ENDIAN_DEFINED");
		J9VM_ENV_SHARED_LIBS_CALLEE_GLOBAL_TABLE_SETUP = flags$.contains("J9VM_ENV_SHARED_LIBS_CALLEE_GLOBAL_TABLE_SETUP");
		J9VM_ENV_SHARED_LIBS_CALLEE_GLOBAL_TABLE_SETUP_DEFINED = flags$.contains("J9VM_ENV_SHARED_LIBS_CALLEE_GLOBAL_TABLE_SETUP_DEFINED");
		J9VM_ENV_SHARED_LIBS_USE_GLOBAL_TABLE = flags$.contains("J9VM_ENV_SHARED_LIBS_USE_GLOBAL_TABLE");
		J9VM_ENV_SHARED_LIBS_USE_GLOBAL_TABLE_DEFINED = flags$.contains("J9VM_ENV_SHARED_LIBS_USE_GLOBAL_TABLE_DEFINED");
		J9VM_ENV_SSE2_SUPPORT_DETECTION = flags$.contains("J9VM_ENV_SSE2_SUPPORT_DETECTION");
		J9VM_ENV_SSE2_SUPPORT_DETECTION_DEFINED = flags$.contains("J9VM_ENV_SSE2_SUPPORT_DETECTION_DEFINED");
		J9VM_ENV_Z_TPF = flags$.contains("J9VM_ENV_Z_TPF");
		J9VM_ENV_Z_TPF_DEFINED = flags$.contains("J9VM_ENV_Z_TPF_DEFINED");
		J9VM_GC_ADAPTIVE_TENURING = flags$.contains("J9VM_GC_ADAPTIVE_TENURING");
		J9VM_GC_ADAPTIVE_TENURING_DEFINED = flags$.contains("J9VM_GC_ADAPTIVE_TENURING_DEFINED");
		J9VM_GC_ALIGN_OBJECTS = flags$.contains("J9VM_GC_ALIGN_OBJECTS");
		J9VM_GC_ALIGN_OBJECTS_DEFINED = flags$.contains("J9VM_GC_ALIGN_OBJECTS_DEFINED");
		J9VM_GC_ALLOCATION_TAX = flags$.contains("J9VM_GC_ALLOCATION_TAX");
		J9VM_GC_ALLOCATION_TAX_DEFINED = flags$.contains("J9VM_GC_ALLOCATION_TAX_DEFINED");
		J9VM_GC_ALWAYS_CALL_OBJECT_ACCESS_BARRIER = flags$.contains("J9VM_GC_ALWAYS_CALL_OBJECT_ACCESS_BARRIER");
		J9VM_GC_ALWAYS_CALL_OBJECT_ACCESS_BARRIER_DEFINED = flags$.contains("J9VM_GC_ALWAYS_CALL_OBJECT_ACCESS_BARRIER_DEFINED");
		J9VM_GC_ALWAYS_CALL_WRITE_BARRIER = flags$.contains("J9VM_GC_ALWAYS_CALL_WRITE_BARRIER");
		J9VM_GC_ALWAYS_CALL_WRITE_BARRIER_DEFINED = flags$.contains("J9VM_GC_ALWAYS_CALL_WRITE_BARRIER_DEFINED");
		J9VM_GC_BATCH_CLEAR_TLH = flags$.contains("J9VM_GC_BATCH_CLEAR_TLH");
		J9VM_GC_BATCH_CLEAR_TLH_DEFINED = flags$.contains("J9VM_GC_BATCH_CLEAR_TLH_DEFINED");
		J9VM_GC_CLASSES_ON_HEAP = flags$.contains("J9VM_GC_CLASSES_ON_HEAP");
		J9VM_GC_CLASSES_ON_HEAP_DEFINED = flags$.contains("J9VM_GC_CLASSES_ON_HEAP_DEFINED");
		J9VM_GC_COMBINATION_SPEC_DEFINED = flags$.contains("J9VM_GC_COMBINATION_SPEC_DEFINED");
		J9VM_GC_COMPRESSED_POINTERS_DEFINED = flags$.contains("J9VM_GC_COMPRESSED_POINTERS_DEFINED");
		J9VM_GC_COMPRESSED_POINTER_BARRIER = flags$.contains("J9VM_GC_COMPRESSED_POINTER_BARRIER");
		J9VM_GC_COMPRESSED_POINTER_BARRIER_DEFINED = flags$.contains("J9VM_GC_COMPRESSED_POINTER_BARRIER_DEFINED");
		J9VM_GC_CONCURRENT_SWEEP = flags$.contains("J9VM_GC_CONCURRENT_SWEEP");
		J9VM_GC_CONCURRENT_SWEEP_DEFINED = flags$.contains("J9VM_GC_CONCURRENT_SWEEP_DEFINED");
		J9VM_GC_DEBUG_ASSERTS = flags$.contains("J9VM_GC_DEBUG_ASSERTS");
		J9VM_GC_DEBUG_ASSERTS_DEFINED = flags$.contains("J9VM_GC_DEBUG_ASSERTS_DEFINED");
		J9VM_GC_DYNAMIC_CLASS_UNLOADING_DEFINED = flags$.contains("J9VM_GC_DYNAMIC_CLASS_UNLOADING_DEFINED");
		J9VM_GC_DYNAMIC_NEW_SPACE_SIZING = flags$.contains("J9VM_GC_DYNAMIC_NEW_SPACE_SIZING");
		J9VM_GC_DYNAMIC_NEW_SPACE_SIZING_DEFINED = flags$.contains("J9VM_GC_DYNAMIC_NEW_SPACE_SIZING_DEFINED");
		J9VM_GC_ENABLE_DOUBLE_MAP = flags$.contains("J9VM_GC_ENABLE_DOUBLE_MAP");
		J9VM_GC_ENABLE_DOUBLE_MAP_DEFINED = flags$.contains("J9VM_GC_ENABLE_DOUBLE_MAP_DEFINED");
		J9VM_GC_FINALIZATION_DEFINED = flags$.contains("J9VM_GC_FINALIZATION_DEFINED");
		J9VM_GC_FRAGMENTED_HEAP = flags$.contains("J9VM_GC_FRAGMENTED_HEAP");
		J9VM_GC_FRAGMENTED_HEAP_DEFINED = flags$.contains("J9VM_GC_FRAGMENTED_HEAP_DEFINED");
		J9VM_GC_GENERATIONAL_DEFINED = flags$.contains("J9VM_GC_GENERATIONAL_DEFINED");
		J9VM_GC_HEAP_CARD_TABLE = flags$.contains("J9VM_GC_HEAP_CARD_TABLE");
		J9VM_GC_HEAP_CARD_TABLE_DEFINED = flags$.contains("J9VM_GC_HEAP_CARD_TABLE_DEFINED");
		J9VM_GC_INLINED_ALLOC_FIELDS_DEFINED = flags$.contains("J9VM_GC_INLINED_ALLOC_FIELDS_DEFINED");
		J9VM_GC_JNI_ARRAY_CACHE = flags$.contains("J9VM_GC_JNI_ARRAY_CACHE");
		J9VM_GC_JNI_ARRAY_CACHE_DEFINED = flags$.contains("J9VM_GC_JNI_ARRAY_CACHE_DEFINED");
		J9VM_GC_LARGE_OBJECT_AREA = flags$.contains("J9VM_GC_LARGE_OBJECT_AREA");
		J9VM_GC_LARGE_OBJECT_AREA_DEFINED = flags$.contains("J9VM_GC_LARGE_OBJECT_AREA_DEFINED");
		J9VM_GC_LEAF_BITS_DEFINED = flags$.contains("J9VM_GC_LEAF_BITS_DEFINED");
		J9VM_GC_MINIMUM_OBJECT_SIZE_DEFINED = flags$.contains("J9VM_GC_MINIMUM_OBJECT_SIZE_DEFINED");
		J9VM_GC_MODRON_COMPACTION_DEFINED = flags$.contains("J9VM_GC_MODRON_COMPACTION_DEFINED");
		J9VM_GC_MODRON_CONCURRENT_MARK = flags$.contains("J9VM_GC_MODRON_CONCURRENT_MARK");
		J9VM_GC_MODRON_CONCURRENT_MARK_DEFINED = flags$.contains("J9VM_GC_MODRON_CONCURRENT_MARK_DEFINED");
		J9VM_GC_MODRON_GC = flags$.contains("J9VM_GC_MODRON_GC");
		J9VM_GC_MODRON_GC_DEFINED = flags$.contains("J9VM_GC_MODRON_GC_DEFINED");
		J9VM_GC_MODRON_SCAVENGER_DEFINED = flags$.contains("J9VM_GC_MODRON_SCAVENGER_DEFINED");
		J9VM_GC_MODRON_STANDARD_DEFINED = flags$.contains("J9VM_GC_MODRON_STANDARD_DEFINED");
		J9VM_GC_MODRON_TRACE = flags$.contains("J9VM_GC_MODRON_TRACE");
		J9VM_GC_MODRON_TRACE_DEFINED = flags$.contains("J9VM_GC_MODRON_TRACE_DEFINED");
		J9VM_GC_MODRON_VERBOSE = flags$.contains("J9VM_GC_MODRON_VERBOSE");
		J9VM_GC_MODRON_VERBOSE_DEFINED = flags$.contains("J9VM_GC_MODRON_VERBOSE_DEFINED");
		J9VM_GC_NEW_SPINLOCK_SUPPORT = flags$.contains("J9VM_GC_NEW_SPINLOCK_SUPPORT");
		J9VM_GC_NEW_SPINLOCK_SUPPORT_DEFINED = flags$.contains("J9VM_GC_NEW_SPINLOCK_SUPPORT_DEFINED");
		J9VM_GC_NON_ZERO_TLH_DEFINED = flags$.contains("J9VM_GC_NON_ZERO_TLH_DEFINED");
		J9VM_GC_OBJECT_ACCESS_BARRIER = flags$.contains("J9VM_GC_OBJECT_ACCESS_BARRIER");
		J9VM_GC_OBJECT_ACCESS_BARRIER_DEFINED = flags$.contains("J9VM_GC_OBJECT_ACCESS_BARRIER_DEFINED");
		J9VM_GC_REALTIME_DEFINED = flags$.contains("J9VM_GC_REALTIME_DEFINED");
		J9VM_GC_SEGREGATED_HEAP_DEFINED = flags$.contains("J9VM_GC_SEGREGATED_HEAP_DEFINED");
		J9VM_GC_STRICT_OMR = flags$.contains("J9VM_GC_STRICT_OMR");
		J9VM_GC_STRICT_OMR_DEFINED = flags$.contains("J9VM_GC_STRICT_OMR_DEFINED");
		J9VM_GC_SUBPOOLS = flags$.contains("J9VM_GC_SUBPOOLS");
		J9VM_GC_SUBPOOLS_ALIAS = flags$.contains("J9VM_GC_SUBPOOLS_ALIAS");
		J9VM_GC_SUBPOOLS_ALIAS_DEFINED = flags$.contains("J9VM_GC_SUBPOOLS_ALIAS_DEFINED");
		J9VM_GC_SUBPOOLS_DEFINED = flags$.contains("J9VM_GC_SUBPOOLS_DEFINED");
		J9VM_GC_THREAD_LOCAL_HEAP = flags$.contains("J9VM_GC_THREAD_LOCAL_HEAP");
		J9VM_GC_THREAD_LOCAL_HEAP_DEFINED = flags$.contains("J9VM_GC_THREAD_LOCAL_HEAP_DEFINED");
		J9VM_GC_TILTED_NEW_SPACE = flags$.contains("J9VM_GC_TILTED_NEW_SPACE");
		J9VM_GC_TILTED_NEW_SPACE_DEFINED = flags$.contains("J9VM_GC_TILTED_NEW_SPACE_DEFINED");
		J9VM_GC_TLH_PREFETCH_FTA = flags$.contains("J9VM_GC_TLH_PREFETCH_FTA");
		J9VM_GC_TLH_PREFETCH_FTA_DEFINED = flags$.contains("J9VM_GC_TLH_PREFETCH_FTA_DEFINED");
		J9VM_GC_USE_INLINE_ALLOCATE = flags$.contains("J9VM_GC_USE_INLINE_ALLOCATE");
		J9VM_GC_USE_INLINE_ALLOCATE_DEFINED = flags$.contains("J9VM_GC_USE_INLINE_ALLOCATE_DEFINED");
		J9VM_GC_VERIFY_ACCESS_BARRIER = flags$.contains("J9VM_GC_VERIFY_ACCESS_BARRIER");
		J9VM_GC_VERIFY_ACCESS_BARRIER_DEFINED = flags$.contains("J9VM_GC_VERIFY_ACCESS_BARRIER_DEFINED");
		J9VM_GC_VLHGC_DEFINED = flags$.contains("J9VM_GC_VLHGC_DEFINED");
		J9VM_INTERP_AOT_COMPILE_SUPPORT = flags$.contains("J9VM_INTERP_AOT_COMPILE_SUPPORT");
		J9VM_INTERP_AOT_COMPILE_SUPPORT_DEFINED = flags$.contains("J9VM_INTERP_AOT_COMPILE_SUPPORT_DEFINED");
		J9VM_INTERP_AOT_RUNTIME_SUPPORT = flags$.contains("J9VM_INTERP_AOT_RUNTIME_SUPPORT");
		J9VM_INTERP_AOT_RUNTIME_SUPPORT_DEFINED = flags$.contains("J9VM_INTERP_AOT_RUNTIME_SUPPORT_DEFINED");
		J9VM_INTERP_ATOMIC_FREE_JNI = flags$.contains("J9VM_INTERP_ATOMIC_FREE_JNI");
		J9VM_INTERP_ATOMIC_FREE_JNI_DEFINED = flags$.contains("J9VM_INTERP_ATOMIC_FREE_JNI_DEFINED");
		J9VM_INTERP_ATOMIC_FREE_JNI_USES_FLUSH = flags$.contains("J9VM_INTERP_ATOMIC_FREE_JNI_USES_FLUSH");
		J9VM_INTERP_ATOMIC_FREE_JNI_USES_FLUSH_DEFINED = flags$.contains("J9VM_INTERP_ATOMIC_FREE_JNI_USES_FLUSH_DEFINED");
		J9VM_INTERP_BYTECODE_PREVERIFICATION = flags$.contains("J9VM_INTERP_BYTECODE_PREVERIFICATION");
		J9VM_INTERP_BYTECODE_PREVERIFICATION_DEFINED = flags$.contains("J9VM_INTERP_BYTECODE_PREVERIFICATION_DEFINED");
		J9VM_INTERP_BYTECODE_VERIFICATION = flags$.contains("J9VM_INTERP_BYTECODE_VERIFICATION");
		J9VM_INTERP_BYTECODE_VERIFICATION_DEFINED = flags$.contains("J9VM_INTERP_BYTECODE_VERIFICATION_DEFINED");
		J9VM_INTERP_COMPRESSED_OBJECT_HEADER_DEFINED = flags$.contains("J9VM_INTERP_COMPRESSED_OBJECT_HEADER_DEFINED");
		J9VM_INTERP_CUSTOM_SPIN_OPTIONS = flags$.contains("J9VM_INTERP_CUSTOM_SPIN_OPTIONS");
		J9VM_INTERP_CUSTOM_SPIN_OPTIONS_DEFINED = flags$.contains("J9VM_INTERP_CUSTOM_SPIN_OPTIONS_DEFINED");
		J9VM_INTERP_DEBUG_SUPPORT_DEFINED = flags$.contains("J9VM_INTERP_DEBUG_SUPPORT_DEFINED");
		J9VM_INTERP_ENABLE_JIT_ON_DESKTOP = flags$.contains("J9VM_INTERP_ENABLE_JIT_ON_DESKTOP");
		J9VM_INTERP_ENABLE_JIT_ON_DESKTOP_DEFINED = flags$.contains("J9VM_INTERP_ENABLE_JIT_ON_DESKTOP_DEFINED");
		J9VM_INTERP_FLAGS_IN_CLASS_SLOT_DEFINED = flags$.contains("J9VM_INTERP_FLAGS_IN_CLASS_SLOT_DEFINED");
		J9VM_INTERP_FLOATMATHLIB_TRACING = flags$.contains("J9VM_INTERP_FLOATMATHLIB_TRACING");
		J9VM_INTERP_FLOATMATHLIB_TRACING_DEFINED = flags$.contains("J9VM_INTERP_FLOATMATHLIB_TRACING_DEFINED");
		J9VM_INTERP_FLOATMATH_TRACING = flags$.contains("J9VM_INTERP_FLOATMATH_TRACING");
		J9VM_INTERP_FLOATMATH_TRACING_DEFINED = flags$.contains("J9VM_INTERP_FLOATMATH_TRACING_DEFINED");
		J9VM_INTERP_FLOAT_SUPPORT = flags$.contains("J9VM_INTERP_FLOAT_SUPPORT");
		J9VM_INTERP_FLOAT_SUPPORT_DEFINED = flags$.contains("J9VM_INTERP_FLOAT_SUPPORT_DEFINED");
		J9VM_INTERP_GP_HANDLER = flags$.contains("J9VM_INTERP_GP_HANDLER");
		J9VM_INTERP_GP_HANDLER_DEFINED = flags$.contains("J9VM_INTERP_GP_HANDLER_DEFINED");
		J9VM_INTERP_GROWABLE_STACKS_DEFINED = flags$.contains("J9VM_INTERP_GROWABLE_STACKS_DEFINED");
		J9VM_INTERP_HOT_CODE_REPLACEMENT_DEFINED = flags$.contains("J9VM_INTERP_HOT_CODE_REPLACEMENT_DEFINED");
		J9VM_INTERP_JIT_ON_BY_DEFAULT = flags$.contains("J9VM_INTERP_JIT_ON_BY_DEFAULT");
		J9VM_INTERP_JIT_ON_BY_DEFAULT_DEFINED = flags$.contains("J9VM_INTERP_JIT_ON_BY_DEFAULT_DEFINED");
		J9VM_INTERP_JNI_SUPPORT = flags$.contains("J9VM_INTERP_JNI_SUPPORT");
		J9VM_INTERP_JNI_SUPPORT_DEFINED = flags$.contains("J9VM_INTERP_JNI_SUPPORT_DEFINED");
		J9VM_INTERP_MINIMAL_JCL = flags$.contains("J9VM_INTERP_MINIMAL_JCL");
		J9VM_INTERP_MINIMAL_JCL_DEFINED = flags$.contains("J9VM_INTERP_MINIMAL_JCL_DEFINED");
		J9VM_INTERP_MINIMAL_JNI = flags$.contains("J9VM_INTERP_MINIMAL_JNI");
		J9VM_INTERP_MINIMAL_JNI_DEFINED = flags$.contains("J9VM_INTERP_MINIMAL_JNI_DEFINED");
		J9VM_INTERP_NATIVE_SUPPORT_DEFINED = flags$.contains("J9VM_INTERP_NATIVE_SUPPORT_DEFINED");
		J9VM_INTERP_NEW_HEADER_SHAPE = flags$.contains("J9VM_INTERP_NEW_HEADER_SHAPE");
		J9VM_INTERP_NEW_HEADER_SHAPE_DEFINED = flags$.contains("J9VM_INTERP_NEW_HEADER_SHAPE_DEFINED");
		J9VM_INTERP_PROFILING_BYTECODES = flags$.contains("J9VM_INTERP_PROFILING_BYTECODES");
		J9VM_INTERP_PROFILING_BYTECODES_DEFINED = flags$.contains("J9VM_INTERP_PROFILING_BYTECODES_DEFINED");
		J9VM_INTERP_ROMABLE_AOT_SUPPORT = flags$.contains("J9VM_INTERP_ROMABLE_AOT_SUPPORT");
		J9VM_INTERP_ROMABLE_AOT_SUPPORT_DEFINED = flags$.contains("J9VM_INTERP_ROMABLE_AOT_SUPPORT_DEFINED");
		J9VM_INTERP_SIG_QUIT_THREAD = flags$.contains("J9VM_INTERP_SIG_QUIT_THREAD");
		J9VM_INTERP_SIG_QUIT_THREAD_DEFINED = flags$.contains("J9VM_INTERP_SIG_QUIT_THREAD_DEFINED");
		J9VM_INTERP_SIG_QUIT_THREAD_USES_SEMAPHORES = flags$.contains("J9VM_INTERP_SIG_QUIT_THREAD_USES_SEMAPHORES");
		J9VM_INTERP_SIG_QUIT_THREAD_USES_SEMAPHORES_DEFINED = flags$.contains("J9VM_INTERP_SIG_QUIT_THREAD_USES_SEMAPHORES_DEFINED");
		J9VM_INTERP_SMALL_MONITOR_SLOT_DEFINED = flags$.contains("J9VM_INTERP_SMALL_MONITOR_SLOT_DEFINED");
		J9VM_INTERP_TRACING = flags$.contains("J9VM_INTERP_TRACING");
		J9VM_INTERP_TRACING_DEFINED = flags$.contains("J9VM_INTERP_TRACING_DEFINED");
		J9VM_INTERP_TWO_PASS_EXCLUSIVE = flags$.contains("J9VM_INTERP_TWO_PASS_EXCLUSIVE");
		J9VM_INTERP_TWO_PASS_EXCLUSIVE_DEFINED = flags$.contains("J9VM_INTERP_TWO_PASS_EXCLUSIVE_DEFINED");
		J9VM_INTERP_UPDATE_VMCTRACING = flags$.contains("J9VM_INTERP_UPDATE_VMCTRACING");
		J9VM_INTERP_UPDATE_VMCTRACING_DEFINED = flags$.contains("J9VM_INTERP_UPDATE_VMCTRACING_DEFINED");
		J9VM_INTERP_USE_SPLIT_SIDE_TABLES = flags$.contains("J9VM_INTERP_USE_SPLIT_SIDE_TABLES");
		J9VM_INTERP_USE_SPLIT_SIDE_TABLES_DEFINED = flags$.contains("J9VM_INTERP_USE_SPLIT_SIDE_TABLES_DEFINED");
		J9VM_INTERP_USE_UNSAFE_HELPER = flags$.contains("J9VM_INTERP_USE_UNSAFE_HELPER");
		J9VM_INTERP_USE_UNSAFE_HELPER_DEFINED = flags$.contains("J9VM_INTERP_USE_UNSAFE_HELPER_DEFINED");
		J9VM_INTERP_VERBOSE = flags$.contains("J9VM_INTERP_VERBOSE");
		J9VM_INTERP_VERBOSE_DEFINED = flags$.contains("J9VM_INTERP_VERBOSE_DEFINED");
		J9VM_IVE_JXE_FILE_RELOCATOR = flags$.contains("J9VM_IVE_JXE_FILE_RELOCATOR");
		J9VM_IVE_JXE_FILE_RELOCATOR_DEFINED = flags$.contains("J9VM_IVE_JXE_FILE_RELOCATOR_DEFINED");
		J9VM_IVE_JXE_IN_PLACE_RELOCATOR = flags$.contains("J9VM_IVE_JXE_IN_PLACE_RELOCATOR");
		J9VM_IVE_JXE_IN_PLACE_RELOCATOR_DEFINED = flags$.contains("J9VM_IVE_JXE_IN_PLACE_RELOCATOR_DEFINED");
		J9VM_IVE_JXE_NATIVES = flags$.contains("J9VM_IVE_JXE_NATIVES");
		J9VM_IVE_JXE_NATIVES_DEFINED = flags$.contains("J9VM_IVE_JXE_NATIVES_DEFINED");
		J9VM_IVE_JXE_OERELOCATOR = flags$.contains("J9VM_IVE_JXE_OERELOCATOR");
		J9VM_IVE_JXE_OERELOCATOR_DEFINED = flags$.contains("J9VM_IVE_JXE_OERELOCATOR_DEFINED");
		J9VM_IVE_JXE_STREAMING_RELOCATOR = flags$.contains("J9VM_IVE_JXE_STREAMING_RELOCATOR");
		J9VM_IVE_JXE_STREAMING_RELOCATOR_DEFINED = flags$.contains("J9VM_IVE_JXE_STREAMING_RELOCATOR_DEFINED");
		J9VM_IVE_MEMORY_SPACE_HELPERS = flags$.contains("J9VM_IVE_MEMORY_SPACE_HELPERS");
		J9VM_IVE_MEMORY_SPACE_HELPERS_DEFINED = flags$.contains("J9VM_IVE_MEMORY_SPACE_HELPERS_DEFINED");
		J9VM_IVE_ROM_IMAGE_HELPERS = flags$.contains("J9VM_IVE_ROM_IMAGE_HELPERS");
		J9VM_IVE_ROM_IMAGE_HELPERS_DEFINED = flags$.contains("J9VM_IVE_ROM_IMAGE_HELPERS_DEFINED");
		J9VM_JIT_32BIT_USES64BIT_REGISTERS_DEFINED = flags$.contains("J9VM_JIT_32BIT_USES64BIT_REGISTERS_DEFINED");
		J9VM_JIT_CLASS_UNLOAD_RWMONITOR = flags$.contains("J9VM_JIT_CLASS_UNLOAD_RWMONITOR");
		J9VM_JIT_CLASS_UNLOAD_RWMONITOR_DEFINED = flags$.contains("J9VM_JIT_CLASS_UNLOAD_RWMONITOR_DEFINED");
		J9VM_JIT_C_HELPERS = flags$.contains("J9VM_JIT_C_HELPERS");
		J9VM_JIT_C_HELPERS_DEFINED = flags$.contains("J9VM_JIT_C_HELPERS_DEFINED");
		J9VM_JIT_DYNAMIC_LOOP_TRANSFER = flags$.contains("J9VM_JIT_DYNAMIC_LOOP_TRANSFER");
		J9VM_JIT_DYNAMIC_LOOP_TRANSFER_DEFINED = flags$.contains("J9VM_JIT_DYNAMIC_LOOP_TRANSFER_DEFINED");
		J9VM_JIT_FREE_SYSTEM_STACK_POINTER = flags$.contains("J9VM_JIT_FREE_SYSTEM_STACK_POINTER");
		J9VM_JIT_FREE_SYSTEM_STACK_POINTER_DEFINED = flags$.contains("J9VM_JIT_FREE_SYSTEM_STACK_POINTER_DEFINED");
		J9VM_JIT_FULL_SPEED_DEBUG_DEFINED = flags$.contains("J9VM_JIT_FULL_SPEED_DEBUG_DEFINED");
		J9VM_JIT_GC_ON_RESOLVE_SUPPORT = flags$.contains("J9VM_JIT_GC_ON_RESOLVE_SUPPORT");
		J9VM_JIT_GC_ON_RESOLVE_SUPPORT_DEFINED = flags$.contains("J9VM_JIT_GC_ON_RESOLVE_SUPPORT_DEFINED");
		J9VM_JIT_IA32_FIXED_FRAME = flags$.contains("J9VM_JIT_IA32_FIXED_FRAME");
		J9VM_JIT_IA32_FIXED_FRAME_DEFINED = flags$.contains("J9VM_JIT_IA32_FIXED_FRAME_DEFINED");
		J9VM_JIT_MICRO_JIT = flags$.contains("J9VM_JIT_MICRO_JIT");
		J9VM_JIT_MICRO_JIT_DEFINED = flags$.contains("J9VM_JIT_MICRO_JIT_DEFINED");
		J9VM_JIT_NATHELP_USES_CLASS_OBJECTS = flags$.contains("J9VM_JIT_NATHELP_USES_CLASS_OBJECTS");
		J9VM_JIT_NATHELP_USES_CLASS_OBJECTS_DEFINED = flags$.contains("J9VM_JIT_NATHELP_USES_CLASS_OBJECTS_DEFINED");
		J9VM_JIT_NEEDS_TRAMPOLINES = flags$.contains("J9VM_JIT_NEEDS_TRAMPOLINES");
		J9VM_JIT_NEEDS_TRAMPOLINES_DEFINED = flags$.contains("J9VM_JIT_NEEDS_TRAMPOLINES_DEFINED");
		J9VM_JIT_NEW_DUAL_HELPERS = flags$.contains("J9VM_JIT_NEW_DUAL_HELPERS");
		J9VM_JIT_NEW_DUAL_HELPERS_DEFINED = flags$.contains("J9VM_JIT_NEW_DUAL_HELPERS_DEFINED");
		J9VM_JIT_NEW_INSTANCE_PROTOTYPE = flags$.contains("J9VM_JIT_NEW_INSTANCE_PROTOTYPE");
		J9VM_JIT_NEW_INSTANCE_PROTOTYPE_DEFINED = flags$.contains("J9VM_JIT_NEW_INSTANCE_PROTOTYPE_DEFINED");
		J9VM_JIT_ON_STACK_REPLACEMENT = flags$.contains("J9VM_JIT_ON_STACK_REPLACEMENT");
		J9VM_JIT_ON_STACK_REPLACEMENT_DEFINED = flags$.contains("J9VM_JIT_ON_STACK_REPLACEMENT_DEFINED");
		J9VM_JIT_REQUIRES_TRAP_HANDLER = flags$.contains("J9VM_JIT_REQUIRES_TRAP_HANDLER");
		J9VM_JIT_REQUIRES_TRAP_HANDLER_DEFINED = flags$.contains("J9VM_JIT_REQUIRES_TRAP_HANDLER_DEFINED");
		J9VM_JIT_RUNTIME_INSTRUMENTATION = flags$.contains("J9VM_JIT_RUNTIME_INSTRUMENTATION");
		J9VM_JIT_RUNTIME_INSTRUMENTATION_DEFINED = flags$.contains("J9VM_JIT_RUNTIME_INSTRUMENTATION_DEFINED");
		J9VM_JIT_SMALL = flags$.contains("J9VM_JIT_SMALL");
		J9VM_JIT_SMALL_DEFINED = flags$.contains("J9VM_JIT_SMALL_DEFINED");
		J9VM_JIT_SUPPORTS_DIRECT_JNI = flags$.contains("J9VM_JIT_SUPPORTS_DIRECT_JNI");
		J9VM_JIT_SUPPORTS_DIRECT_JNI_DEFINED = flags$.contains("J9VM_JIT_SUPPORTS_DIRECT_JNI_DEFINED");
		J9VM_JIT_TRANSACTION_DIAGNOSTIC_THREAD_BLOCK = flags$.contains("J9VM_JIT_TRANSACTION_DIAGNOSTIC_THREAD_BLOCK");
		J9VM_JIT_TRANSACTION_DIAGNOSTIC_THREAD_BLOCK_DEFINED = flags$.contains("J9VM_JIT_TRANSACTION_DIAGNOSTIC_THREAD_BLOCK_DEFINED");
		J9VM_MATH_DIRECT_HELPERS = flags$.contains("J9VM_MATH_DIRECT_HELPERS");
		J9VM_MATH_DIRECT_HELPERS_DEFINED = flags$.contains("J9VM_MATH_DIRECT_HELPERS_DEFINED");
		J9VM_OPT_ANNOTATIONS = flags$.contains("J9VM_OPT_ANNOTATIONS");
		J9VM_OPT_ANNOTATIONS_DEFINED = flags$.contains("J9VM_OPT_ANNOTATIONS_DEFINED");
		J9VM_OPT_BIG_INTEGER = flags$.contains("J9VM_OPT_BIG_INTEGER");
		J9VM_OPT_BIG_INTEGER_DEFINED = flags$.contains("J9VM_OPT_BIG_INTEGER_DEFINED");
		J9VM_OPT_CUDA = flags$.contains("J9VM_OPT_CUDA");
		J9VM_OPT_CUDA_DEFINED = flags$.contains("J9VM_OPT_CUDA_DEFINED");
		J9VM_OPT_DEBUG_INFO_SERVER_DEFINED = flags$.contains("J9VM_OPT_DEBUG_INFO_SERVER_DEFINED");
		J9VM_OPT_DEBUG_JSR45_SUPPORT = flags$.contains("J9VM_OPT_DEBUG_JSR45_SUPPORT");
		J9VM_OPT_DEBUG_JSR45_SUPPORT_DEFINED = flags$.contains("J9VM_OPT_DEBUG_JSR45_SUPPORT_DEFINED");
		J9VM_OPT_DEPRECATED_METHODS = flags$.contains("J9VM_OPT_DEPRECATED_METHODS");
		J9VM_OPT_DEPRECATED_METHODS_DEFINED = flags$.contains("J9VM_OPT_DEPRECATED_METHODS_DEFINED");
		J9VM_OPT_DMA_NATIVES = flags$.contains("J9VM_OPT_DMA_NATIVES");
		J9VM_OPT_DMA_NATIVES_DEFINED = flags$.contains("J9VM_OPT_DMA_NATIVES_DEFINED");
		J9VM_OPT_DYNAMIC_LOAD_SUPPORT = flags$.contains("J9VM_OPT_DYNAMIC_LOAD_SUPPORT");
		J9VM_OPT_DYNAMIC_LOAD_SUPPORT_DEFINED = flags$.contains("J9VM_OPT_DYNAMIC_LOAD_SUPPORT_DEFINED");
		J9VM_OPT_FIPS = flags$.contains("J9VM_OPT_FIPS");
		J9VM_OPT_FIPS_DEFINED = flags$.contains("J9VM_OPT_FIPS_DEFINED");
		J9VM_OPT_FRAGMENT_RAM_CLASSES = flags$.contains("J9VM_OPT_FRAGMENT_RAM_CLASSES");
		J9VM_OPT_FRAGMENT_RAM_CLASSES_DEFINED = flags$.contains("J9VM_OPT_FRAGMENT_RAM_CLASSES_DEFINED");
		J9VM_OPT_INLINE_JSRS = flags$.contains("J9VM_OPT_INLINE_JSRS");
		J9VM_OPT_INLINE_JSRS_DEFINED = flags$.contains("J9VM_OPT_INLINE_JSRS_DEFINED");
		J9VM_OPT_INVARIANT_INTERNING = flags$.contains("J9VM_OPT_INVARIANT_INTERNING");
		J9VM_OPT_INVARIANT_INTERNING_DEFINED = flags$.contains("J9VM_OPT_INVARIANT_INTERNING_DEFINED");
		J9VM_OPT_JAVA_OFFLOAD_SUPPORT = flags$.contains("J9VM_OPT_JAVA_OFFLOAD_SUPPORT");
		J9VM_OPT_JAVA_OFFLOAD_SUPPORT_DEFINED = flags$.contains("J9VM_OPT_JAVA_OFFLOAD_SUPPORT_DEFINED");
		J9VM_OPT_JITSERVER = flags$.contains("J9VM_OPT_JITSERVER");
		J9VM_OPT_JITSERVER_DEFINED = flags$.contains("J9VM_OPT_JITSERVER_DEFINED");
		J9VM_OPT_JVMTI_DEFINED = flags$.contains("J9VM_OPT_JVMTI_DEFINED");
		J9VM_OPT_JXE_LOAD_SUPPORT = flags$.contains("J9VM_OPT_JXE_LOAD_SUPPORT");
		J9VM_OPT_JXE_LOAD_SUPPORT_DEFINED = flags$.contains("J9VM_OPT_JXE_LOAD_SUPPORT_DEFINED");
		J9VM_OPT_MEMORY_CHECK_SUPPORT = flags$.contains("J9VM_OPT_MEMORY_CHECK_SUPPORT");
		J9VM_OPT_MEMORY_CHECK_SUPPORT_DEFINED = flags$.contains("J9VM_OPT_MEMORY_CHECK_SUPPORT_DEFINED");
		J9VM_OPT_METHOD_HANDLE = flags$.contains("J9VM_OPT_METHOD_HANDLE");
		J9VM_OPT_METHOD_HANDLE_COMMON = flags$.contains("J9VM_OPT_METHOD_HANDLE_COMMON");
		J9VM_OPT_METHOD_HANDLE_COMMON_DEFINED = flags$.contains("J9VM_OPT_METHOD_HANDLE_COMMON_DEFINED");
		J9VM_OPT_METHOD_HANDLE_DEFINED = flags$.contains("J9VM_OPT_METHOD_HANDLE_DEFINED");
		J9VM_OPT_MODULE = flags$.contains("J9VM_OPT_MODULE");
		J9VM_OPT_MODULE_DEFINED = flags$.contains("J9VM_OPT_MODULE_DEFINED");
		J9VM_OPT_MULTI_LAYER_SHARED_CLASS_CACHE = flags$.contains("J9VM_OPT_MULTI_LAYER_SHARED_CLASS_CACHE");
		J9VM_OPT_MULTI_LAYER_SHARED_CLASS_CACHE_DEFINED = flags$.contains("J9VM_OPT_MULTI_LAYER_SHARED_CLASS_CACHE_DEFINED");
		J9VM_OPT_MULTI_VM = flags$.contains("J9VM_OPT_MULTI_VM");
		J9VM_OPT_MULTI_VM_DEFINED = flags$.contains("J9VM_OPT_MULTI_VM_DEFINED");
		J9VM_OPT_NATIVE_CHARACTER_CONVERTER = flags$.contains("J9VM_OPT_NATIVE_CHARACTER_CONVERTER");
		J9VM_OPT_NATIVE_CHARACTER_CONVERTER_DEFINED = flags$.contains("J9VM_OPT_NATIVE_CHARACTER_CONVERTER_DEFINED");
		J9VM_OPT_NATIVE_LOCALE_SUPPORT = flags$.contains("J9VM_OPT_NATIVE_LOCALE_SUPPORT");
		J9VM_OPT_NATIVE_LOCALE_SUPPORT_DEFINED = flags$.contains("J9VM_OPT_NATIVE_LOCALE_SUPPORT_DEFINED");
		J9VM_OPT_NEW_OBJECT_HASH = flags$.contains("J9VM_OPT_NEW_OBJECT_HASH");
		J9VM_OPT_NEW_OBJECT_HASH_DEFINED = flags$.contains("J9VM_OPT_NEW_OBJECT_HASH_DEFINED");
		J9VM_OPT_NEW_ROM_CLASS_BUILDER = flags$.contains("J9VM_OPT_NEW_ROM_CLASS_BUILDER");
		J9VM_OPT_NEW_ROM_CLASS_BUILDER_DEFINED = flags$.contains("J9VM_OPT_NEW_ROM_CLASS_BUILDER_DEFINED");
		J9VM_OPT_NO_CLASSLOADERS = flags$.contains("J9VM_OPT_NO_CLASSLOADERS");
		J9VM_OPT_NO_CLASSLOADERS_DEFINED = flags$.contains("J9VM_OPT_NO_CLASSLOADERS_DEFINED");
		J9VM_OPT_NRR = flags$.contains("J9VM_OPT_NRR");
		J9VM_OPT_NRR_DEFINED = flags$.contains("J9VM_OPT_NRR_DEFINED");
		J9VM_OPT_OPENJDK_METHODHANDLE = flags$.contains("J9VM_OPT_OPENJDK_METHODHANDLE");
		J9VM_OPT_OPENJDK_METHODHANDLE_DEFINED = flags$.contains("J9VM_OPT_OPENJDK_METHODHANDLE_DEFINED");
		J9VM_OPT_PACKED = flags$.contains("J9VM_OPT_PACKED");
		J9VM_OPT_PACKED_DEFINED = flags$.contains("J9VM_OPT_PACKED_DEFINED");
		J9VM_OPT_PANAMA = flags$.contains("J9VM_OPT_PANAMA");
		J9VM_OPT_PANAMA_DEFINED = flags$.contains("J9VM_OPT_PANAMA_DEFINED");
		J9VM_OPT_PHP_SUPPORT = flags$.contains("J9VM_OPT_PHP_SUPPORT");
		J9VM_OPT_PHP_SUPPORT_DEFINED = flags$.contains("J9VM_OPT_PHP_SUPPORT_DEFINED");
		J9VM_OPT_REFLECT = flags$.contains("J9VM_OPT_REFLECT");
		J9VM_OPT_REFLECT_DEFINED = flags$.contains("J9VM_OPT_REFLECT_DEFINED");
		J9VM_OPT_RESOURCE_MANAGED = flags$.contains("J9VM_OPT_RESOURCE_MANAGED");
		J9VM_OPT_RESOURCE_MANAGED_DEFINED = flags$.contains("J9VM_OPT_RESOURCE_MANAGED_DEFINED");
		J9VM_OPT_ROM_IMAGE_SUPPORT = flags$.contains("J9VM_OPT_ROM_IMAGE_SUPPORT");
		J9VM_OPT_ROM_IMAGE_SUPPORT_DEFINED = flags$.contains("J9VM_OPT_ROM_IMAGE_SUPPORT_DEFINED");
		J9VM_OPT_SHARED_CLASSES_DEFINED = flags$.contains("J9VM_OPT_SHARED_CLASSES_DEFINED");
		J9VM_OPT_SIDECAR = flags$.contains("J9VM_OPT_SIDECAR");
		J9VM_OPT_SIDECAR_DEFINED = flags$.contains("J9VM_OPT_SIDECAR_DEFINED");
		J9VM_OPT_SRP_AVL_TREE_SUPPORT = flags$.contains("J9VM_OPT_SRP_AVL_TREE_SUPPORT");
		J9VM_OPT_SRP_AVL_TREE_SUPPORT_DEFINED = flags$.contains("J9VM_OPT_SRP_AVL_TREE_SUPPORT_DEFINED");
		J9VM_OPT_STRING_COMPRESSION = flags$.contains("J9VM_OPT_STRING_COMPRESSION");
		J9VM_OPT_STRING_COMPRESSION_DEFINED = flags$.contains("J9VM_OPT_STRING_COMPRESSION_DEFINED");
		J9VM_OPT_SWITCH_STACKS_FOR_SIGNAL_HANDLER = flags$.contains("J9VM_OPT_SWITCH_STACKS_FOR_SIGNAL_HANDLER");
		J9VM_OPT_SWITCH_STACKS_FOR_SIGNAL_HANDLER_DEFINED = flags$.contains("J9VM_OPT_SWITCH_STACKS_FOR_SIGNAL_HANDLER_DEFINED");
		J9VM_OPT_TEMP_NEW_INTERFACE_INVOCATION = flags$.contains("J9VM_OPT_TEMP_NEW_INTERFACE_INVOCATION");
		J9VM_OPT_TEMP_NEW_INTERFACE_INVOCATION_DEFINED = flags$.contains("J9VM_OPT_TEMP_NEW_INTERFACE_INVOCATION_DEFINED");
		J9VM_OPT_USE_FFI = flags$.contains("J9VM_OPT_USE_FFI");
		J9VM_OPT_USE_FFI_DEFINED = flags$.contains("J9VM_OPT_USE_FFI_DEFINED");
		J9VM_OPT_USE_FFI_ONLY = flags$.contains("J9VM_OPT_USE_FFI_ONLY");
		J9VM_OPT_USE_FFI_ONLY_DEFINED = flags$.contains("J9VM_OPT_USE_FFI_ONLY_DEFINED");
		J9VM_OPT_USE_OMR_DDR = flags$.contains("J9VM_OPT_USE_OMR_DDR");
		J9VM_OPT_USE_OMR_DDR_DEFINED = flags$.contains("J9VM_OPT_USE_OMR_DDR_DEFINED");
		J9VM_OPT_VALHALLA_VALUE_TYPES = flags$.contains("J9VM_OPT_VALHALLA_VALUE_TYPES");
		J9VM_OPT_VALHALLA_VALUE_TYPES_DEFINED = flags$.contains("J9VM_OPT_VALHALLA_VALUE_TYPES_DEFINED");
		J9VM_OPT_VEE_SUPPORT = flags$.contains("J9VM_OPT_VEE_SUPPORT");
		J9VM_OPT_VEE_SUPPORT_DEFINED = flags$.contains("J9VM_OPT_VEE_SUPPORT_DEFINED");
		J9VM_OPT_VM_LOCAL_STORAGE = flags$.contains("J9VM_OPT_VM_LOCAL_STORAGE");
		J9VM_OPT_VM_LOCAL_STORAGE_DEFINED = flags$.contains("J9VM_OPT_VM_LOCAL_STORAGE_DEFINED");
		J9VM_OPT_ZERO = flags$.contains("J9VM_OPT_ZERO");
		J9VM_OPT_ZERO_DEFINED = flags$.contains("J9VM_OPT_ZERO_DEFINED");
		J9VM_OPT_ZIP_SUPPORT = flags$.contains("J9VM_OPT_ZIP_SUPPORT");
		J9VM_OPT_ZIP_SUPPORT_DEFINED = flags$.contains("J9VM_OPT_ZIP_SUPPORT_DEFINED");
		J9VM_OPT_ZLIB_COMPRESSION = flags$.contains("J9VM_OPT_ZLIB_COMPRESSION");
		J9VM_OPT_ZLIB_COMPRESSION_DEFINED = flags$.contains("J9VM_OPT_ZLIB_COMPRESSION_DEFINED");
		J9VM_OPT_ZLIB_SUPPORT = flags$.contains("J9VM_OPT_ZLIB_SUPPORT");
		J9VM_OPT_ZLIB_SUPPORT_DEFINED = flags$.contains("J9VM_OPT_ZLIB_SUPPORT_DEFINED");
		J9VM_PORT_OMRSIG_SUPPORT = flags$.contains("J9VM_PORT_OMRSIG_SUPPORT");
		J9VM_PORT_OMRSIG_SUPPORT_DEFINED = flags$.contains("J9VM_PORT_OMRSIG_SUPPORT_DEFINED");
		J9VM_PORT_RUNTIME_INSTRUMENTATION = flags$.contains("J9VM_PORT_RUNTIME_INSTRUMENTATION");
		J9VM_PORT_RUNTIME_INSTRUMENTATION_DEFINED = flags$.contains("J9VM_PORT_RUNTIME_INSTRUMENTATION_DEFINED");
		J9VM_PORT_SIGNAL_SUPPORT = flags$.contains("J9VM_PORT_SIGNAL_SUPPORT");
		J9VM_PORT_SIGNAL_SUPPORT_DEFINED = flags$.contains("J9VM_PORT_SIGNAL_SUPPORT_DEFINED");
		J9VM_PORT_ZOS_CEEHDLRSUPPORT = flags$.contains("J9VM_PORT_ZOS_CEEHDLRSUPPORT");
		J9VM_PORT_ZOS_CEEHDLRSUPPORT_DEFINED = flags$.contains("J9VM_PORT_ZOS_CEEHDLRSUPPORT_DEFINED");
		J9VM_PROF_COUNT_ARGS_TEMPS = flags$.contains("J9VM_PROF_COUNT_ARGS_TEMPS");
		J9VM_PROF_COUNT_ARGS_TEMPS_DEFINED = flags$.contains("J9VM_PROF_COUNT_ARGS_TEMPS_DEFINED");
		J9VM_PROF_EVENT_REPORTING = flags$.contains("J9VM_PROF_EVENT_REPORTING");
		J9VM_PROF_EVENT_REPORTING_DEFINED = flags$.contains("J9VM_PROF_EVENT_REPORTING_DEFINED");
		J9VM_PROF_JVMTI = flags$.contains("J9VM_PROF_JVMTI");
		J9VM_PROF_JVMTI_DEFINED = flags$.contains("J9VM_PROF_JVMTI_DEFINED");
		J9VM_RAS_DUMP_AGENTS = flags$.contains("J9VM_RAS_DUMP_AGENTS");
		J9VM_RAS_DUMP_AGENTS_DEFINED = flags$.contains("J9VM_RAS_DUMP_AGENTS_DEFINED");
		J9VM_RAS_EYECATCHERS = flags$.contains("J9VM_RAS_EYECATCHERS");
		J9VM_RAS_EYECATCHERS_DEFINED = flags$.contains("J9VM_RAS_EYECATCHERS_DEFINED");
		J9VM_RAS_FATAL_ASSERT = flags$.contains("J9VM_RAS_FATAL_ASSERT");
		J9VM_RAS_FATAL_ASSERT_DEFINED = flags$.contains("J9VM_RAS_FATAL_ASSERT_DEFINED");
		J9VM_SIZE_OPTIMIZE_SEND_TARGETS = flags$.contains("J9VM_SIZE_OPTIMIZE_SEND_TARGETS");
		J9VM_SIZE_OPTIMIZE_SEND_TARGETS_DEFINED = flags$.contains("J9VM_SIZE_OPTIMIZE_SEND_TARGETS_DEFINED");
		J9VM_SIZE_SMALL_CODE = flags$.contains("J9VM_SIZE_SMALL_CODE");
		J9VM_SIZE_SMALL_CODE_DEFINED = flags$.contains("J9VM_SIZE_SMALL_CODE_DEFINED");
		J9VM_SIZE_SMALL_OS_STACK = flags$.contains("J9VM_SIZE_SMALL_OS_STACK");
		J9VM_SIZE_SMALL_OS_STACK_DEFINED = flags$.contains("J9VM_SIZE_SMALL_OS_STACK_DEFINED");
		J9VM_SIZE_SMALL_RAM = flags$.contains("J9VM_SIZE_SMALL_RAM");
		J9VM_SIZE_SMALL_RAM_DEFINED = flags$.contains("J9VM_SIZE_SMALL_RAM_DEFINED");
		J9VM_TEMP_ALIGN_CLASS_SLOT = flags$.contains("J9VM_TEMP_ALIGN_CLASS_SLOT");
		J9VM_TEMP_ALIGN_CLASS_SLOT_DEFINED = flags$.contains("J9VM_TEMP_ALIGN_CLASS_SLOT_DEFINED");
		J9VM_TEMP_KEEP_FLAGS_SLOT = flags$.contains("J9VM_TEMP_KEEP_FLAGS_SLOT");
		J9VM_TEMP_KEEP_FLAGS_SLOT_DEFINED = flags$.contains("J9VM_TEMP_KEEP_FLAGS_SLOT_DEFINED");
		J9VM_THR_ASYNC_NAME_UPDATE = flags$.contains("J9VM_THR_ASYNC_NAME_UPDATE");
		J9VM_THR_ASYNC_NAME_UPDATE_DEFINED = flags$.contains("J9VM_THR_ASYNC_NAME_UPDATE_DEFINED");
		J9VM_THR_EXTRA_CHECKS = flags$.contains("J9VM_THR_EXTRA_CHECKS");
		J9VM_THR_EXTRA_CHECKS_DEFINED = flags$.contains("J9VM_THR_EXTRA_CHECKS_DEFINED");
		J9VM_THR_JLM_HST = flags$.contains("J9VM_THR_JLM_HST");
		J9VM_THR_JLM_HST_DEFINED = flags$.contains("J9VM_THR_JLM_HST_DEFINED");
		J9VM_THR_LOCK_NURSERY_DEFINED = flags$.contains("J9VM_THR_LOCK_NURSERY_DEFINED");
		J9VM_THR_LOCK_NURSERY_FAT_ARRAYS = flags$.contains("J9VM_THR_LOCK_NURSERY_FAT_ARRAYS");
		J9VM_THR_LOCK_NURSERY_FAT_ARRAYS_DEFINED = flags$.contains("J9VM_THR_LOCK_NURSERY_FAT_ARRAYS_DEFINED");
		J9VM_THR_LOCK_RESERVATION_DEFINED = flags$.contains("J9VM_THR_LOCK_RESERVATION_DEFINED");
		J9VM_THR_PREEMPTIVE = flags$.contains("J9VM_THR_PREEMPTIVE");
		J9VM_THR_PREEMPTIVE_DEFINED = flags$.contains("J9VM_THR_PREEMPTIVE_DEFINED");
		J9VM_THR_SMART_DEFLATION = flags$.contains("J9VM_THR_SMART_DEFLATION");
		J9VM_THR_SMART_DEFLATION_DEFINED = flags$.contains("J9VM_THR_SMART_DEFLATION_DEFINED");
		J9_COPYRIGHT_STRING_DEFINED = flags$.contains("J9_COPYRIGHT_STRING_DEFINED");
		JAVA_SPEC_VERSION = flags$.contains("JAVA_SPEC_VERSION");
		JAVA_SPEC_VERSION_DEFINED = flags$.contains("JAVA_SPEC_VERSION_DEFINED");
		JAVA_SPEC_VERSION_STRING_DEFINED = flags$.contains("JAVA_SPEC_VERSION_STRING_DEFINED");
		arch_aarch64 = flags$.contains("arch_aarch64") || flags$.contains("J9VM_ARCH_AARCH64");
		arch_arm = flags$.contains("arch_arm") || flags$.contains("J9VM_ARCH_ARM");
		arch_power = flags$.contains("arch_power") || flags$.contains("J9VM_ARCH_POWER");
		arch_riscv = flags$.contains("arch_riscv") || flags$.contains("J9VM_ARCH_RISCV");
		arch_s390 = flags$.contains("arch_s390");
		arch_x86 = flags$.contains("arch_x86") || flags$.contains("J9VM_ARCH_X86");
		env_data64 = flags$.contains("env_data64");
		env_littleEndian = flags$.contains("env_littleEndian");
		gc_combinationSpec = flags$.contains("gc_combinationSpec");
		gc_compressedPointers = flags$.contains("gc_compressedPointers");
		gc_dynamicClassUnloading = flags$.contains("gc_dynamicClassUnloading");
		gc_finalization = flags$.contains("gc_finalization");
		gc_generational = flags$.contains("gc_generational");
		gc_inlinedAllocFields = flags$.contains("gc_inlinedAllocFields");
		gc_leafBits = flags$.contains("gc_leafBits");
		gc_minimumObjectSize = flags$.contains("gc_minimumObjectSize");
		gc_modronCompaction = flags$.contains("gc_modronCompaction");
		gc_modronScavenger = flags$.contains("gc_modronScavenger");
		gc_modronStandard = flags$.contains("gc_modronStandard");
		gc_nonZeroTLH = flags$.contains("gc_nonZeroTLH");
		gc_realtime = flags$.contains("gc_realtime");
		gc_segregatedHeap = flags$.contains("gc_segregatedHeap");
		gc_vlhgc = flags$.contains("gc_vlhgc");
		interp_compressedObjectHeader = flags$.contains("interp_compressedObjectHeader");
		interp_debugSupport = flags$.contains("interp_debugSupport");
		interp_flagsInClassSlot = flags$.contains("interp_flagsInClassSlot");
		interp_growableStacks = flags$.contains("interp_growableStacks");
		interp_hotCodeReplacement = flags$.contains("interp_hotCodeReplacement");
		interp_nativeSupport = flags$.contains("interp_nativeSupport");
		interp_smallMonitorSlot = flags$.contains("interp_smallMonitorSlot");
		jit_32bitUses64bitRegisters = flags$.contains("jit_32bitUses64bitRegisters");
		jit_fullSpeedDebug = flags$.contains("jit_fullSpeedDebug");
		opt_debugInfoServer = flags$.contains("opt_debugInfoServer");
		opt_jvmti = flags$.contains("opt_jvmti");
		opt_sharedClasses = flags$.contains("opt_sharedClasses");
		thr_lockNursery = flags$.contains("thr_lockNursery");
		thr_lockReservation = flags$.contains("thr_lockReservation");
	}
}
