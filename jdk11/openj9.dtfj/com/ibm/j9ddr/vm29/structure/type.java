/*******************************************************************************
 * Copyright (c) 1991, 2021 IBM Corp. and others
 *
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/
 * or the Apache License, Version 2.0 which accompanies this distribution
 * and is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * This Source Code may also be made available under the following
 * Secondary Licenses when the conditions for such availability set
 * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
 * General Public License, version 2 with the GNU Classpath
 * Exception [1] and GNU General Public License, version 2 with the
 * OpenJDK Assembly Exception [2].
 *
 * [1] https://www.gnu.org/software/classpath/license.html
 * [2] http://openjdk.java.net/legal/assembly-exception.html
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
 *******************************************************************************/
package com.ibm.j9ddr.vm29.structure;

/**
 * Structure: type
 *
 * This stub class represents a class that can return in memory offsets
 * to VM C and C++ structures.
 *
 * This particular implementation exists only to allow StructurePointer code to
 * compile at development time.  This is never loaded at run time.
 *
 * At runtime generated byte codes returning actual offset values from the core file
 * will be loaded by the StructureClassLoader.
 */
public final class type {

	// VM Constants

	public static final long SIZEOF;

	// Offsets

	public static final int _clazz$nameIndexOffset_;
	public static final int _clazz$utf8Offset_;
	public static final int _intFloat$dataOffset_;
	public static final int _invokedynamic$bsmIndexOffset_;
	public static final int _invokedynamic$nameAndTypeIndexOffset_;
	public static final int _invokedynamic$nasOffset_;
	public static final int _longDouble$slot1Offset_;
	public static final int _longDouble$slot2Offset_;
	public static final int _methodHandle$handleTypeOffset_;
	public static final int _methodHandle$methodOrFieldRefIndexOffset_;
	public static final int _methodType$classIndexOffset_;
	public static final int _methodType$methodTypeOffset_;
	public static final int _methodType$methodTypeIndexOffset_;
	public static final int _methodType$nameAndTypeIndexOffset_;
	public static final int _methodType$utf8Offset_;
	public static final int _nas$nameOffset_;
	public static final int _nas$nameIndexOffset_;
	public static final int _nas$signatureOffset_;
	public static final int _nas$signatureIndexOffset_;
	public static final int _ref$classIndexOffset_;
	public static final int _ref$nameAndTypeIndexOffset_;
	public static final int _ref$refOffset_;
	public static final int _string$stringIndexOffset_;
	public static final int _string$utf8Offset_;
	public static final int _utf8$dataOffset_;

	// Static Initializer

	private static final boolean RUNTIME = false;

	static {
		if (!RUNTIME) {
			throw new IllegalArgumentException("This stub class should not be on your classpath");
		}

		SIZEOF = 0;
		_clazz$nameIndexOffset_ = 0;
		_clazz$utf8Offset_ = 0;
		_intFloat$dataOffset_ = 0;
		_invokedynamic$bsmIndexOffset_ = 0;
		_invokedynamic$nameAndTypeIndexOffset_ = 0;
		_invokedynamic$nasOffset_ = 0;
		_longDouble$slot1Offset_ = 0;
		_longDouble$slot2Offset_ = 0;
		_methodHandle$handleTypeOffset_ = 0;
		_methodHandle$methodOrFieldRefIndexOffset_ = 0;
		_methodType$classIndexOffset_ = 0;
		_methodType$methodTypeOffset_ = 0;
		_methodType$methodTypeIndexOffset_ = 0;
		_methodType$nameAndTypeIndexOffset_ = 0;
		_methodType$utf8Offset_ = 0;
		_nas$nameOffset_ = 0;
		_nas$nameIndexOffset_ = 0;
		_nas$signatureOffset_ = 0;
		_nas$signatureIndexOffset_ = 0;
		_ref$classIndexOffset_ = 0;
		_ref$nameAndTypeIndexOffset_ = 0;
		_ref$refOffset_ = 0;
		_string$stringIndexOffset_ = 0;
		_string$utf8Offset_ = 0;
		_utf8$dataOffset_ = 0;
	}

}
